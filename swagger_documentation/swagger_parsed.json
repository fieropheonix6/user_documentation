{
    "swagger": "2.0",
    "info": {
        "title": "Figshare API",
        "description": "Figshare apiv2. Using Swagger 2.0",
        "version": "2.0.0"
    },
    "host": "api.figinternal.dev",
    "basePath": "/v2",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/articles": {
            "get": {
                "tags": [
                    "articles"
                ],
                "operationId": "articles_list",
                "summary": "Public Articles",
                "description": "Returns a list of public articles",
                "security": [],
                "parameters": [
                    {
                        "name": "X-Cursor",
                        "in": "header",
                        "type": "string",
                        "format": "uuid",
                        "required": false,
                        "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The field by which to order. Default varies by endpoint/resource.",
                        "type": "string",
                        "enum": [
                            "published_date",
                            "created_date",
                            "modified_date",
                            "views",
                            "shares",
                            "downloads",
                            "cites"
                        ],
                        "default": "published_date",
                        "required": false
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "default": "desc",
                        "required": false
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "description": "only return articles from this institution",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "published_since",
                        "in": "query",
                        "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "modified_since",
                        "in": "query",
                        "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "only return articles from this group",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    },
                    {
                        "name": "resource_doi",
                        "in": "query",
                        "description": "Deprecated by related materials. Only return articles with this resource_doi",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "item_type",
                        "in": "query",
                        "description": "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    },
                    {
                        "name": "doi",
                        "in": "query",
                        "description": "only return articles with this doi",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "handle",
                        "in": "query",
                        "description": "only return articles with this handle",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of articles",
                        "headers": {
                            "X-Cursor": {
                                "type": "string",
                                "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities."
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Entity. Syntax is correct but one of the parameters isn't correctly processed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/search": {
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "articles_search",
                "summary": "Public Articles Search",
                "description": "Returns a list of public articles, filtered by the search parameters",
                "security": [],
                "parameters": [
                    {
                        "name": "X-Cursor",
                        "in": "header",
                        "type": "string",
                        "format": "uuid",
                        "required": false,
                        "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected."
                    },
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/ArticleSearch"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of articles",
                        "headers": {
                            "X-Cursor": {
                                "type": "string",
                                "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities."
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArticleWithProject"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Entity. Syntax is correct but one of the parameters isn't correctly processed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}": {
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Public Article",
                "operationId": "article_details",
                "summary": "View article details",
                "description": "View an article",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article representation",
                        "schema": {
                            "$ref": "#/definitions/ArticleComplete"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/versions": {
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Public Article",
                "operationId": "article_versions",
                "summary": "List article versions",
                "description": "List public article versions",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article version representations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArticleVersions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Article ID must be an integer and bigger than 0."
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/versions/{v_number}": {
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Public Article",
                "operationId": "article_version_details",
                "summary": "Article details for version",
                "description": "Article with specified version",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "v_number",
                        "in": "path",
                        "description": "Article Version Number",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article representation",
                        "schema": {
                            "$ref": "#/definitions/ArticleComplete"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/download": {
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Public Article",
                "operationId": "public_article_download",
                "summary": "Public Article Download",
                "description": "Download files from a public article preserving the folder structure",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "folder_path",
                        "in": "query",
                        "description": "Folder path to download. If not provided, all files from the article will be downloaded",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/versions/{v_number}/download": {
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Public Article",
                "operationId": "public_article_version_download",
                "summary": "Public Article Version Download",
                "description": "Download files from a certain version of an public article preserving the folder structure",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "v_number",
                        "in": "path",
                        "description": "Version Number",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "folder_path",
                        "in": "query",
                        "description": "Folder path to download. If not provided, all files from the article will be downloaded",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/versions/{v_number}/embargo": {
            "get": {
                "tags": [
                    "articles"
                ],
                "operationId": "article_version_embargo",
                "summary": "Public Article Embargo for article version",
                "description": "Embargo for article version",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "v_number",
                        "in": "path",
                        "description": "Version Number",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Embargo representation",
                        "schema": {
                            "$ref": "#/definitions/ArticleEmbargo"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/versions/{v_number}/confidentiality": {
            "get": {
                "tags": [
                    "articles"
                ],
                "operationId": "article_version_confidentiality",
                "summary": "Public Article Confidentiality for article version",
                "description": "Confidentiality for article version. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "v_number",
                        "in": "path",
                        "description": "Version Number",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Confidentiality representation",
                        "schema": {
                            "$ref": "#/definitions/ArticleConfidentiality"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/files": {
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Public Article files",
                "operationId": "article_files",
                "summary": "List article files",
                "description": "Files list for article",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. List of article files",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PublicFile"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/articles/{article_id}/files/{file_id}": {
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Public Article files",
                "operationId": "article_file_details",
                "summary": "Article file details",
                "description": "File by id",
                "security": [],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "File Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. File representation",
                        "schema": {
                            "$ref": "#/definitions/PublicFile"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/search": {
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "private_articles_search",
                "summary": "Private Articles search",
                "description": "Returns a list of private articles filtered by the search parameters",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/PrivateArticleSearch"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of articles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArticleWithProject"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles": {
            "get": {
                "tags": [
                    "articles"
                ],
                "operationId": "private_articles_list",
                "summary": "Private Articles",
                "description": "Get Own Articles",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of articles belonging to the account",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article",
                "operationId": "private_article_create",
                "summary": "Create new Article",
                "description": "Create a new Article by sending article information",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Article",
                        "description": "Article description",
                        "schema": {
                            "$ref": "#/definitions/ArticleCreate"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/LocationWarnings"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article",
                "operationId": "private_article_details",
                "summary": "Article details",
                "description": "View a private article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article representation",
                        "schema": {
                            "$ref": "#/definitions/ArticleCompletePrivate"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article",
                "operationId": "private_article_update",
                "summary": "Update article",
                "description": "Updating an article by passing body parameters; request can also be made with the PATCH method.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Article",
                        "description": "Article description",
                        "schema": {
                            "$ref": "#/definitions/ArticleUpdate"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "schema": {
                            "$ref": "#/definitions/LocationWarningsUpdate"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of newly created article"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article",
                "operationId": "private_article_delete",
                "summary": "Delete article",
                "description": "Delete an article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/articles/{article_id}/embargo": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Embargo",
                "operationId": "private_article_embargo_details",
                "summary": "Article Embargo Details",
                "description": "View a private article embargo details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Embargo for article",
                        "schema": {
                            "$ref": "#/definitions/ArticleEmbargo"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Embargo",
                "operationId": "private_article_embargo_update",
                "summary": "Update Article Embargo",
                "description": "Note: setting an article under whole embargo does not imply that the article will be published when the embargo will expire. You must explicitly call the publish endpoint to enable this functionality.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Embargo",
                        "description": "Embargo description",
                        "schema": {
                            "$ref": "#/definitions/ArticleEmbargoUpdater"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of embargo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Embargo",
                "operationId": "private_article_embargo_delete",
                "summary": "Delete Article Embargo",
                "description": "Will lift the embargo for the specified article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/articles/{article_id}/resource": {
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "private_article_resource",
                "summary": "Private Article Resource",
                "description": "Edit article resource data.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "in": "body",
                        "name": "Resource",
                        "description": "Resource data",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location for account article details"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/account/articles/{article_id}/publish": {
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "account_article_publish",
                "summary": "Private Article Publish",
                "description": "- If the whole article is under embargo, it will not be published immediately, but when the embargo expires or is lifted.\n- When an article is published, a new public version will be generated. Any further updates to the article will affect the private article data. In order to make these changes publicly visible, an explicit publish operation is needed.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of newly published article"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/unpublish": {
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "account_article_unpublish",
                "summary": "Public Article Unpublish",
                "description": "Allows authorized users to unpublish an article.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "in": "body",
                        "name": "reason",
                        "description": "Article unpublish data",
                        "schema": {
                            "$ref": "#/definitions/ArticleUnpublishData"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/reserve_doi": {
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "private_article_reserve_doi",
                "summary": "Private Article Reserve DOI",
                "description": "Reserve DOI for article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArticleDOI"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/reserve_handle": {
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "private_article_reserve_handle",
                "summary": "Private Article Reserve Handle",
                "description": "Reserve Handle for article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArticleHandle"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/download": {
            "get": {
                "tags": [
                    "articles"
                ],
                "operationId": "private_article_download",
                "summary": "Private Article Download",
                "description": "Download files from a private article preserving the folder structure",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "folder_path",
                        "in": "query",
                        "description": "Folder path to download. If not provided, all files from the article will be downloaded",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Insufficient permissions"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/versions/{version_id}/": {
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Article version private updates",
                "operationId": "article_version_update",
                "summary": "Update article version",
                "description": "Updating an article version by passing body parameters; request can also be made with the PATCH method.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "version_id",
                        "in": "path",
                        "description": "Article version identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "in": "body",
                        "name": "Article",
                        "description": "Article description",
                        "schema": {
                            "$ref": "#/definitions/ArticleVersionUpdate"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "schema": {
                            "$ref": "#/definitions/LocationWarningsUpdate"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of newly created article"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/versions/{version_id}/update_thumb": {
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Article version private updates",
                "operationId": "article_version_update_thumb",
                "summary": "Update article version thumbnail",
                "description": "For a given public article version update the article thumbnail by choosing one of the associated files",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "version_id",
                        "in": "path",
                        "description": "Article version identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "FileId",
                        "in": "body",
                        "description": "File ID",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileId"
                        }
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location for article version details"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/account/articles/{article_id}/authors": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Authors",
                "operationId": "private_article_authors_list",
                "summary": "List article authors",
                "description": "List article authors",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Authors list for article",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Author"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Authors",
                "operationId": "private_article_authors_add",
                "summary": "Add article authors",
                "description": "Associate new authors with the article. This will add new authors to the list of already associated authors",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Authors",
                        "description": "Authors description",
                        "schema": {
                            "$ref": "#/definitions/AuthorsCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of list of authors"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Authors",
                "operationId": "private_article_authors_replace",
                "summary": "Replace article authors",
                "description": "Associate new authors with the article. This will remove all already associated authors and add these new ones",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Authors",
                        "description": "Authors description",
                        "schema": {
                            "$ref": "#/definitions/AuthorsCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of list of authors"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Article ID must be an integer and bigger than 0. Author with ID Not Found."
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/authors/{author_id}": {
            "delete": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Authors",
                "operationId": "private_article_author_delete",
                "summary": "Delete article author",
                "description": "De-associate author from article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "author_id",
                        "in": "path",
                        "description": "Article Author unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/categories": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Categories",
                "operationId": "private_article_categories_list",
                "summary": "List article categories",
                "description": "List article categories",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Categories",
                "operationId": "private_article_categories_add",
                "summary": "Add article categories",
                "description": "Associate new categories with the article. This will add new categories to the list of already associated categories",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "categories",
                        "schema": {
                            "$ref": "#/definitions/CategoriesCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Categories",
                "operationId": "private_article_categories_replace",
                "summary": "Replace article categories",
                "description": "Associate new categories with the article. This will remove all already associated categories and add these new ones",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "categories",
                        "schema": {
                            "$ref": "#/definitions/CategoriesCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/categories/{category_id}": {
            "delete": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Categories",
                "operationId": "private_article_category_delete",
                "summary": "Delete article category",
                "description": "De-associate category from article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Category unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/confidentiality": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Confidentiality - DEPRECATED",
                "operationId": "private_article_confidentiality_details",
                "summary": "Article confidentiality details",
                "description": "View confidentiality settings. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article categories",
                        "schema": {
                            "$ref": "#/definitions/ArticleConfidentiality"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Confidentiality - DEPRECATED",
                "operationId": "private_article_confidentiality_update",
                "summary": "Update article confidentiality",
                "description": "Update confidentiality settings. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "reason",
                        "schema": {
                            "$ref": "#/definitions/ConfidentialityCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Confidentiality - DEPRECATED",
                "operationId": "private_article_confidentiality_delete",
                "summary": "Delete article confidentiality",
                "description": "Delete confidentiality settings. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/articles/{article_id}/private_links": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Private Links",
                "operationId": "private_article_private_link",
                "summary": "List private links",
                "description": "List private links",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article private links",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrivateLink"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Private Links",
                "operationId": "private_article_private_link_create",
                "summary": "Create private link",
                "description": "Create new private link for this article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "private_link",
                        "schema": {
                            "$ref": "#/definitions/PrivateLinkCreator"
                        },
                        "required": false
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of private link"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/PrivateLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/private_links/{link_id}": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                },
                {
                    "name": "link_id",
                    "in": "path",
                    "description": "Private link token",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Private Links",
                "operationId": "private_article_private_link_update",
                "summary": "Update private link",
                "description": "Update existing private link for this article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "private_link",
                        "schema": {
                            "$ref": "#/definitions/PrivateLinkCreator"
                        },
                        "required": false
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "link_id",
                        "in": "path",
                        "description": "Private link token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of private link"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Private Links",
                "operationId": "private_article_private_link_delete",
                "summary": "Disable private link",
                "description": "Disable/delete private link for this article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "link_id",
                        "in": "path",
                        "description": "Private link token",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/account/articles/{article_id}/files": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                },
                {
                    "name": "page",
                    "in": "query",
                    "description": "Page number. Used for pagination with page_size",
                    "required": false,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000
                },
                {
                    "name": "page_size",
                    "in": "query",
                    "description": "The number of results included on a page. Used for pagination with page",
                    "required": false,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10
                },
                {
                    "name": "limit",
                    "in": "query",
                    "description": "Number of results included on a page. Used for pagination with query",
                    "required": false,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000
                },
                {
                    "name": "offset",
                    "in": "query",
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "required": false,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "operationId": "private_article_files_list",
                "x-subcategory": "Private Article Files",
                "summary": "List article files",
                "description": "List private files",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article files list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrivateFile"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    }
                ]
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Files",
                "operationId": "private_article_upload_initiate",
                "summary": "Initiate Upload",
                "description": "Initiate a new file upload within the article. Either use the link property to point to an existing file that resides elsewhere and will not be uploaded to Figshare or use the other 3 parameters (md5, name, size).",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "File",
                        "schema": {
                            "$ref": "#/definitions/FileCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of new file"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity. Parameters missing or incorrect"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/articles/{article_id}/files/{file_id}": {
            "parameters": [
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                },
                {
                    "name": "file_id",
                    "in": "path",
                    "description": "File unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Files",
                "operationId": "private_article_file",
                "summary": "Single File",
                "description": "View details of file for specified article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article private file",
                        "schema": {
                            "$ref": "#/definitions/PrivateFile"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "File unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Files",
                "operationId": "private_article_upload_complete",
                "summary": "Complete Upload",
                "description": "Complete file upload",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "File unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "delete": {
                "tags": [
                    "articles"
                ],
                "x-subcategory": "Private Article Files",
                "summary": "File Delete",
                "operationId": "private_article_file_delete",
                "description": "Complete file upload",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "File unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/articles/export": {
            "get": {
                "tags": [
                    "articles"
                ],
                "operationId": "account_article_report",
                "summary": "Account Article Report",
                "description": "Return status on all reports generated for the account from the oauth credentials",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "A group ID to filter by",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of account report entries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountReport"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "operationId": "account_article_report_generate",
                "summary": "Initiate a new Report",
                "description": "Initiate a new Article Report for this Account. There is a limit of 1 report per day.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. AccountReport created.",
                        "schema": {
                            "$ref": "#/definitions/AccountReport"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "tags": [
                    "collections"
                ],
                "operationId": "collections_list",
                "summary": "Public Collections",
                "description": "Returns a list of public collections",
                "security": [],
                "parameters": [
                    {
                        "name": "X-Cursor",
                        "in": "header",
                        "type": "string",
                        "format": "uuid",
                        "required": false,
                        "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The field by which to order. Default varies by endpoint/resource.",
                        "type": "string",
                        "enum": [
                            "published_date",
                            "created_date",
                            "modified_date",
                            "views",
                            "shares",
                            "cites"
                        ],
                        "default": "published_date",
                        "required": false
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "default": "desc",
                        "required": false
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "description": "only return collections from this institution",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "published_since",
                        "in": "query",
                        "description": "Filter by collection publishing date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "modified_since",
                        "in": "query",
                        "description": "Filter by collection modified date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "only return collections from this group",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    },
                    {
                        "name": "resource_doi",
                        "in": "query",
                        "description": "only return collections with this resource_doi",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "doi",
                        "in": "query",
                        "description": "only return collections with this doi",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "handle",
                        "in": "query",
                        "description": "only return collections with this handle",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of collections",
                        "headers": {
                            "X-Cursor": {
                                "type": "string",
                                "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities."
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Collection"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/search": {
            "post": {
                "tags": [
                    "collections"
                ],
                "operationId": "collections_search",
                "summary": "Public Collections Search",
                "description": "Returns a list of public collections",
                "security": [],
                "parameters": [
                    {
                        "name": "X-Cursor",
                        "in": "header",
                        "type": "string",
                        "format": "uuid",
                        "required": false,
                        "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected."
                    },
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/CollectionSearch"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of collections",
                        "headers": {
                            "X-Cursor": {
                                "type": "string",
                                "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities."
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Collection"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/{collection_id}": {
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Public Collection",
                "operationId": "collection_details",
                "summary": "Collection details",
                "description": "View a collection",
                "security": [],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Collection representation",
                        "schema": {
                            "$ref": "#/definitions/CollectionComplete"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/{collection_id}/versions": {
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Public Collection",
                "operationId": "collection_versions",
                "summary": "Collection Versions list",
                "description": "Returns a list of public collection Versions",
                "security": [],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of versions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CollectionVersions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/{collection_id}/versions/{version_id}": {
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Public Collection",
                "operationId": "collection_version_details",
                "summary": "Collection Version details",
                "description": "View details for a certain version of a collection",
                "security": [],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "version_id",
                        "in": "path",
                        "description": "Version Number",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Collection for that version",
                        "schema": {
                            "$ref": "#/definitions/CollectionComplete"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/{collection_id}/articles": {
            "get": {
                "tags": [
                    "collections"
                ],
                "operationId": "collection_articles",
                "summary": "Public Collection Articles",
                "description": "Returns a list of public collection articles",
                "security": [],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of articles belonging to the collection",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections": {
            "get": {
                "tags": [
                    "collections"
                ],
                "operationId": "private_collections_list",
                "summary": "Private Collections List",
                "description": "List private collections",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The field by which to order. Default varies by endpoint/resource.",
                        "type": "string",
                        "enum": [
                            "published_date",
                            "modified_date",
                            "views",
                            "shares",
                            "cites"
                        ],
                        "default": "published_date",
                        "required": false
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "default": "desc",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of collections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Collection"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection",
                "operationId": "private_collection_create",
                "summary": "Create collection",
                "description": "Create a new Collection by sending collection information",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Collection",
                        "description": "Collection description",
                        "schema": {
                            "$ref": "#/definitions/CollectionCreate"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/LocationWarnings"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}": {
            "parameters": [
                {
                    "name": "collection_id",
                    "in": "path",
                    "description": "Collection Unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection",
                "operationId": "private_collection_details",
                "summary": "Collection details",
                "description": "View a collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Collection representation",
                        "schema": {
                            "$ref": "#/definitions/CollectionCompletePrivate"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "put": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection",
                "operationId": "private_collection_update",
                "summary": "Update collection",
                "description": "Update collection details; request can also be made with the PATCH method.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Collection",
                        "description": "Collection description",
                        "schema": {
                            "$ref": "#/definitions/CollectionUpdate"
                        },
                        "required": true
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "schema": {
                            "$ref": "#/definitions/LocationWarningsUpdate"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of collection"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection",
                "operationId": "private_collection_delete",
                "summary": "Delete collection",
                "description": "Delete n collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/collections/search": {
            "post": {
                "tags": [
                    "collections"
                ],
                "operationId": "private_collections_search",
                "summary": "Private Collections Search",
                "description": "Returns a list of private Collections",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/PrivateCollectionSearch"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of collections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Collection"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/reserve_doi": {
            "post": {
                "tags": [
                    "collections"
                ],
                "operationId": "private_collection_reserve_doi",
                "summary": "Private Collection Reserve DOI",
                "description": "Reserve DOI for collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CollectionDOI"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/reserve_handle": {
            "post": {
                "tags": [
                    "collections"
                ],
                "operationId": "private_collection_reserve_handle",
                "summary": "Private Collection Reserve Handle",
                "description": "Reserve Handle for collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CollectionHandle"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/resource": {
            "post": {
                "tags": [
                    "collections"
                ],
                "operationId": "private_collection_resource",
                "summary": "Private Collection Resource",
                "description": "Edit collection resource data.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "in": "body",
                        "name": "Resource",
                        "description": "Resource data",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location for account collection details"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/publish": {
            "post": {
                "tags": [
                    "collections"
                ],
                "operationId": "private_collection_publish",
                "summary": "Private Collection Publish",
                "description": "When a collection is published, a new public version will be generated. Any further updates to the collection will affect the private collection data. In order to make these changes publicly visible, an explicit publish operation is needed.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of collection"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/authors": {
            "parameters": [
                {
                    "name": "collection_id",
                    "in": "path",
                    "description": "Collection unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Authors",
                "operationId": "private_collection_authors_list",
                "summary": "List collection authors",
                "description": "List collection authors",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Embargo for article",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Author"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Authors",
                "operationId": "private_collection_authors_add",
                "summary": "Add collection authors",
                "description": "Associate new authors with the collection. This will add new authors to the list of already associated authors",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Authors",
                        "description": "List of authors",
                        "schema": {
                            "$ref": "#/definitions/AuthorsCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of list of authors"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Authors",
                "operationId": "private_collection_authors_replace",
                "summary": "Replace collection authors",
                "description": "Associate new authors with the collection. This will remove all already associated authors and add these new ones",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Authors",
                        "description": "List of authors",
                        "schema": {
                            "$ref": "#/definitions/AuthorsCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of list of authors"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/authors/{author_id}": {
            "delete": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Authors",
                "operationId": "private_collection_author_delete",
                "summary": "Delete collection author",
                "description": "Delete collection author",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "author_id",
                        "in": "path",
                        "description": "Collection Author unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/categories": {
            "parameters": [
                {
                    "name": "collection_id",
                    "in": "path",
                    "description": "Collection unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Categories",
                "operationId": "private_collection_categories_list",
                "summary": "List collection categories",
                "description": "List collection categories",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Categories list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Categories",
                "operationId": "private_collection_categories_add",
                "summary": "Add collection categories",
                "description": "Associate new categories with the collection. This will add new categories to the list of already associated categories",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "categories",
                        "description": "Categories list",
                        "schema": {
                            "$ref": "#/definitions/CategoriesCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of list of categories"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Categories",
                "operationId": "private_collection_categories_replace",
                "summary": "Replace collection categories",
                "description": "Associate new categories with the collection. This will remove all already associated categories and add these new ones",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "categories",
                        "description": "Categories list",
                        "schema": {
                            "$ref": "#/definitions/CategoriesCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of list of categories"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/categories/{category_id}": {
            "delete": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Categories",
                "operationId": "private_collection_category_delete",
                "summary": "Delete collection category",
                "description": "De-associate category from collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Collection category unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/articles": {
            "parameters": [
                {
                    "name": "collection_id",
                    "in": "path",
                    "description": "Collection unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Articles",
                "operationId": "private_collection_articles_list",
                "summary": "List collection articles",
                "description": "List collection articles",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Articles List",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Articles",
                "operationId": "private_collection_articles_add",
                "summary": "Add collection articles",
                "description": "Associate new articles with the collection. This will add new articles to the list of already associated articles",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "articles",
                        "description": "Articles list",
                        "schema": {
                            "$ref": "#/definitions/ArticlesCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of new articles"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Articles",
                "operationId": "private_collection_articles_replace",
                "summary": "Replace collection articles",
                "description": "Associate new articles with the collection. This will remove all already associated articles and add these new ones",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "articles",
                        "description": "Articles List",
                        "schema": {
                            "$ref": "#/definitions/ArticlesCreator"
                        },
                        "required": true
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of list of articles"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/articles/{article_id}": {
            "delete": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Articles",
                "operationId": "private_collection_article_delete",
                "summary": "Delete collection article",
                "description": "De-associate article from collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Collection article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/private_links": {
            "parameters": [
                {
                    "name": "collection_id",
                    "in": "path",
                    "description": "Collection unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Private Links",
                "operationId": "private_collection_private_links_list",
                "summary": "List collection private links",
                "description": "List article private links",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Collection private links",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrivateLink"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Private Links",
                "operationId": "private_collection_private_link_create",
                "summary": "Create collection private link",
                "description": "Create new private link",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "private_link",
                        "schema": {
                            "$ref": "#/definitions/CollectionPrivateLinkCreator"
                        },
                        "required": false
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of private link"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/PrivateLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/collections/{collection_id}/private_links/{link_id}": {
            "parameters": [
                {
                    "name": "collection_id",
                    "in": "path",
                    "description": "Collection unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                },
                {
                    "name": "link_id",
                    "in": "path",
                    "description": "Private link token",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Private Links",
                "operationId": "private_collection_private_link_details",
                "summary": "View collection private link",
                "description": "View existing private link for this collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Collection private link",
                        "schema": {
                            "$ref": "#/definitions/PrivateLink"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "link_id",
                        "in": "path",
                        "description": "Private link token",
                        "required": true,
                        "type": "string"
                    }
                ]
            },
            "put": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Private Links",
                "operationId": "private_collection_private_link_update",
                "summary": "Update collection private link",
                "description": "Update existing private link for this collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "private_link",
                        "schema": {
                            "$ref": "#/definitions/CollectionPrivateLinkCreator"
                        },
                        "required": false
                    },
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "link_id",
                        "in": "path",
                        "description": "Private link token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of new private link"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "collections"
                ],
                "x-subcategory": "Private Collection Private Links",
                "operationId": "private_collection_private_link_delete",
                "summary": "Disable private link",
                "description": "Disable/delete private link for this collection",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "description": "Collection unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "link_id",
                        "in": "path",
                        "description": "Private link token",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/item_types": {
            "get": {
                "tags": [
                    "other"
                ],
                "operationId": "item_types_list",
                "summary": "Item Types",
                "description": "Returns the list of Item Types of the requested group. If no user is authenticated, returns the item types available for Figshare.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Identifier of the group for which the item types are requested",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of item types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ItemType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "projects"
                ],
                "operationId": "projects_list",
                "summary": "Public Projects",
                "description": "Returns a list of public projects",
                "security": [],
                "parameters": [
                    {
                        "name": "X-Cursor",
                        "in": "header",
                        "type": "string",
                        "format": "uuid",
                        "required": false,
                        "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The field by which to order. Default varies by endpoint/resource.",
                        "type": "string",
                        "enum": [
                            "published_date",
                            "modified_date",
                            "views"
                        ],
                        "default": "published_date",
                        "required": false
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "default": "desc",
                        "required": false
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "description": "only return collections from this institution",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "published_since",
                        "in": "query",
                        "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "only return collections from this group",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of projects",
                        "headers": {
                            "X-Cursor": {
                                "type": "string",
                                "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities."
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/projects/search": {
            "post": {
                "tags": [
                    "projects"
                ],
                "operationId": "projects_search",
                "summary": "Public Projects Search",
                "description": "Returns a list of public articles",
                "security": [],
                "parameters": [
                    {
                        "name": "X-Cursor",
                        "in": "header",
                        "type": "string",
                        "format": "uuid",
                        "required": false,
                        "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected."
                    },
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/ProjectsSearch"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of projects",
                        "headers": {
                            "X-Cursor": {
                                "type": "string",
                                "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities."
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/projects/{project_id}": {
            "get": {
                "tags": [
                    "projects"
                ],
                "operationId": "project_details",
                "summary": "Public Project",
                "description": "View a project",
                "security": [],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Project representation",
                        "schema": {
                            "$ref": "#/definitions/ProjectComplete"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/projects/{project_id}/articles": {
            "get": {
                "tags": [
                    "projects"
                ],
                "operationId": "project_articles",
                "summary": "Public Project Articles",
                "description": "List articles in project",
                "security": [],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project Unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Project articles list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/search": {
            "post": {
                "tags": [
                    "projects"
                ],
                "operationId": "private_projects_search",
                "summary": "Private Projects search",
                "description": "Search inside the private projects",
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/ProjectsSearch"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectPrivate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects": {
            "get": {
                "tags": [
                    "projects"
                ],
                "operationId": "private_projects_list",
                "summary": "Private Projects",
                "description": "List private projects",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The field by which to order.",
                        "type": "string",
                        "enum": [
                            "published_date",
                            "modified_date",
                            "views"
                        ],
                        "default": "published_date",
                        "required": false
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "default": "desc",
                        "required": false
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "only return collections from this institution",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "group",
                            "individual"
                        ]
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "Any combination of owner, collaborator, viewer separated by comma. Examples: \"owner\" or \"owner,collaborator\".",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectPrivate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project",
                "operationId": "private_project_create",
                "description": "Create a new project",
                "summary": "Create project",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Project",
                        "description": "Project  description",
                        "schema": {
                            "$ref": "#/definitions/ProjectCreate"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CreateProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "Project unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project",
                "operationId": "private_project_details",
                "summary": "View project details",
                "description": "View a private project",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Project representation",
                        "schema": {
                            "$ref": "#/definitions/ProjectCompletePrivate"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "put": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project",
                "operationId": "private_project_update",
                "summary": "Update project",
                "description": "Updating an project by passing body parameters; request can also be made with the PATCH method.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Project",
                        "description": "Project description",
                        "schema": {
                            "$ref": "#/definitions/ProjectUpdate"
                        },
                        "required": true
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of project"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project",
                "operationId": "private_project_delete",
                "summary": "Delete project",
                "description": "A project can be deleted only if: - it is not public - it does not have public articles.\n\nWhen an individual project is deleted, all the articles are moved to my data of each owner.\n\nWhen a group project is deleted, all the articles and files are deleted as well. Only project owner, group admin and above can delete a project.\n",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/projects/{project_id}/publish": {
            "post": {
                "tags": [
                    "projects"
                ],
                "operationId": "private_project_publish",
                "summary": "Private Project Publish",
                "description": "Publish a project. Possible after all items inside it are public",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}/notes": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "Project unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Notes",
                "operationId": "private_project_notes_list",
                "summary": "List project notes",
                "description": "List project notes",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. List of project notes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectNote"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Notes",
                "operationId": "private_project_notes_create",
                "summary": "Create project note",
                "description": "Create a new project note",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Note",
                        "description": "Note message",
                        "schema": {
                            "$ref": "#/definitions/ProjectNoteCreate"
                        },
                        "required": true
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location note"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}/notes/{note_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "Project unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                },
                {
                    "name": "note_id",
                    "in": "path",
                    "description": "Note unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Notes",
                "operationId": "private_project_note",
                "summary": "Project note details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Note representation",
                        "schema": {
                            "$ref": "#/definitions/ProjectNotePrivate"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": "Note unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "put": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Notes",
                "operationId": "private_project_note_update",
                "summary": "Update project note",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Note",
                        "description": "Note message",
                        "schema": {
                            "$ref": "#/definitions/ProjectNoteCreate"
                        },
                        "required": true
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": "Note unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location note"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Notes",
                "operationId": "private_project_note_delete",
                "summary": "Delete project note",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": "Note unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/projects/{project_id}/leave": {
            "post": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Collaborators",
                "operationId": "private_project_leave",
                "summary": "Private Project Leave",
                "description": "Please note: project's owner cannot leave the project.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}/collaborators": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "Project unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Collaborators",
                "operationId": "private_project_collaborators_list",
                "summary": "List project collaborators",
                "description": "List Project collaborators and invited users",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. List of Collaborators",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectCollaborator"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Collaborators",
                "operationId": "private_project_collaborators_invite",
                "summary": "Invite project collaborators",
                "description": "Invite users to collaborate on project or view the project",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Collaborator",
                        "description": "viewer or collaborator role. User user_id or email of user",
                        "schema": {
                            "$ref": "#/definitions/ProjectCollaboratorInvite"
                        },
                        "required": true
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}/collaborators/{user_id}": {
            "delete": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Collaborators",
                "operationId": "private_project_collaborator__Delete",
                "summary": "Remove project collaborator",
                "description": "Remove project collaborator",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}/articles": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "Project unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Articles",
                "operationId": "private_project_articles_list",
                "summary": "List project articles",
                "description": "List project articles",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. List of articles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Articles",
                "operationId": "private_project_articles_create",
                "summary": "Create project article",
                "description": "Create a new Article and associate it with this project",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Article",
                        "description": "Article description",
                        "schema": {
                            "$ref": "#/definitions/ArticleProjectCreate"
                        },
                        "required": true
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "url",
                                "description": "Location of article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}/articles/{article_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "Project unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                },
                {
                    "name": "article_id",
                    "in": "path",
                    "description": "Project Article unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Articles",
                "operationId": "private_project_article_details",
                "summary": "Project article details",
                "description": "Project article details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article representation",
                        "schema": {
                            "$ref": "#/definitions/ArticleCompletePrivate"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Project Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Articles",
                "operationId": "private_project_article_delete",
                "summary": "Delete project article",
                "description": "Delete project article",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Project Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/projects/{project_id}/articles/{article_id}/files": {
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Articles",
                "operationId": "private_project_article_files",
                "summary": "Project article list files",
                "description": "List article files",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Project Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. List of files",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrivateFile"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/projects/{project_id}/articles/{article_id}/files/{file_id}": {
            "get": {
                "tags": [
                    "projects"
                ],
                "x-subcategory": "Private Project Articles",
                "operationId": "private_project_article_file",
                "summary": "Project article file details",
                "description": "Project article file details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "article_id",
                        "in": "path",
                        "description": "Project Article unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "File unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. File representation",
                        "schema": {
                            "$ref": "#/definitions/PrivateFile"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/institutions/{institution_string_id}/articles/filter-by": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "institution_articles",
                "summary": "Public Institution Articles",
                "description": "Returns a list of articles belonging to the institution",
                "parameters": [
                    {
                        "name": "institution_string_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resource_id",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filename",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of articles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/authors/search": {
            "post": {
                "tags": [
                    "authors"
                ],
                "operationId": "private_authors_search",
                "summary": "Search Authors",
                "description": "Search for authors",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/PrivateAuthorsSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of authors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AuthorComplete"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/authors/{author_id}": {
            "parameters": [
                {
                    "name": "author_id",
                    "in": "path",
                    "description": "Author unique identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "authors"
                ],
                "operationId": "private_author_details",
                "summary": "Author details",
                "description": "View author details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Article representation",
                        "schema": {
                            "$ref": "#/definitions/AuthorComplete"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "author_id",
                        "in": "path",
                        "description": "Author unique identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/funding/search": {
            "post": {
                "tags": [
                    "other"
                ],
                "operationId": "private_funding_search",
                "summary": "Search Funding",
                "description": "Search for fundings",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/FundingSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of funding information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FundingInformation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account": {
            "get": {
                "tags": [
                    "other"
                ],
                "operationId": "private_account",
                "summary": "Private Account information",
                "description": "Account information for token/personal token",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Account representation",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "other"
                ],
                "operationId": "categories_list",
                "summary": "Public Categories",
                "description": "Returns a list of public categories",
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK. An array of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryList"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/licenses": {
            "get": {
                "tags": [
                    "other"
                ],
                "operationId": "licenses_list",
                "summary": "Public Licenses",
                "description": "Returns a list of public licenses",
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK. An array of licenses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/License"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/licenses": {
            "get": {
                "tags": [
                    "other"
                ],
                "operationId": "private_licenses_list",
                "summary": "Private Account Licenses",
                "description": "This is a private endpoint that requires OAuth. It will return a list with figshare public licenses AND licenses defined for account's institution.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of personal licenses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/License"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_details",
                "summary": "Private Account Institutions",
                "description": "Account institution details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of institutions",
                        "schema": {
                            "$ref": "#/definitions/Institution"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/embargo_options": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_embargo_options_details",
                "summary": "Private Account Institution embargo options",
                "description": "Account institution embargo options details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of embargo options",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupEmbargoOptions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/articles": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_articles",
                "summary": "Private Institution Articles",
                "description": "Get Articles from own institution. User must be administrator of the institution",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The field by which to order. Default varies by endpoint/resource.",
                        "type": "string",
                        "enum": [
                            "published_date",
                            "modified_date"
                        ],
                        "default": "published_date",
                        "required": false
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "default": "desc",
                        "required": false
                    },
                    {
                        "name": "published_since",
                        "in": "query",
                        "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "modified_since",
                        "in": "query",
                        "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "only return collections with this status",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    },
                    {
                        "name": "resource_doi",
                        "in": "query",
                        "description": "only return collections with this resource_doi",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "item_type",
                        "in": "query",
                        "description": "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "only return articles from this group",
                        "type": "integer",
                        "format": "int64",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of articles belonging to the institution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/custom_fields": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "custom_fields_list",
                "summary": "Private account institution group custom fields",
                "description": "Returns the custom fields in the group the user belongs to, or the ones in the group specified, if the user has access.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Group_id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of custom fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShortCustomField"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/custom_fields/{custom_field_id}/items/upload": {
            "post": {
                "tags": [
                    "institutions"
                ],
                "operationId": "custom_fields_upload",
                "summary": "Custom fields values files upload",
                "description": "Uploads a CSV containing values for a specific custom field of type <b>dropdown_large_list</b>. More details in the <a href=\"#custom_fields\">Custom Fields section</a>",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "custom_field_id",
                        "in": "path",
                        "description": "Custom field identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "in": "formData",
                        "name": "external_file",
                        "type": "file",
                        "description": "CSV file to be uploaded"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "example": {
                                "code": 200,
                                "message": "OK"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/categories": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_categories_list",
                "summary": "Private Account Categories",
                "description": "List institution categories (including parent Categories)",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryList"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/groups": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_groups_list",
                "summary": "Private Account Institution Groups",
                "description": "Returns the groups for which the account has administrative privileges (assigned and inherited).",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of Groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/groups/{group_id}/embargo_options": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_group_embargo_options_details",
                "summary": "Private Account Institution Group Embargo Options",
                "description": "Account institution group embargo options details",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "Group identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of embargo options",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupEmbargoOptions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/roles": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_roles_list",
                "summary": "Private Account Institution Roles",
                "description": "Returns the roles available for groups and the institution group.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of Roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/accounts": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_accounts_list",
                "summary": "Private Account Institution Accounts",
                "description": "Returns the accounts for which the account has administrative privileges (assigned and inherited).",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number. Used for pagination with page_size",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5000
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results included on a page. Used for pagination with page",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": 10
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 1
                    },
                    {
                        "name": "institution_user_id",
                        "in": "query",
                        "description": "Filter by institution_user_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id_lte",
                        "in": "query",
                        "description": "Retrieve accounts with an ID lower or equal to the specified value",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    {
                        "name": "id_gte",
                        "in": "query",
                        "description": "Retrieve accounts with an ID greater or equal to the specified value",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of Accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShortAccount"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_accounts_create",
                "summary": "Create new Institution Account",
                "description": "Create a new Account by sending account information. When the institution_user_id is provided, no verification email will be sent. The email_verified flag will automatically be set to true. If the institution_user_id is not provided, a verification email will be sent. The email_verified flag will be set to true once the account is created.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Account",
                        "description": "Account description",
                        "schema": {
                            "$ref": "#/definitions/AccountCreate"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/AccountCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/accounts/{account_id}": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_account",
                "summary": "Private Institution Account information",
                "description": "Private Institution Account information",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "Account identifier the user is associated to",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Account",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_accounts_update",
                "summary": "Update Institution Account",
                "description": "Update Institution Account",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "Account identifier the user is associated to",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "in": "body",
                        "name": "Account",
                        "description": "Account description",
                        "schema": {
                            "$ref": "#/definitions/AccountUpdate"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "format": "link",
                                "description": "Location of newly created article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/roles/{account_id}": {
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "description": "Account identifier the user is associated to",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_account_group_roles",
                "summary": "List Institution Account Group Roles",
                "description": "List Institution Account Group Roles",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. Account Group Roles",
                        "schema": {
                            "$ref": "#/definitions/AccountGroupRoles"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "Account identifier the user is associated to",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            },
            "post": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_account_group_roles_create",
                "summary": "Add Institution Account Group Roles",
                "description": "Add Institution Account Group Roles",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Account",
                        "description": "Account description",
                        "schema": {
                            "$ref": "#/definitions/AccountGroupRolesCreate"
                        },
                        "required": true
                    },
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "Account identifier the user is associated to",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/roles/{account_id}/{group_id}/{role_id}": {
            "delete": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_account_group_role_delete",
                "summary": "Delete Institution Account Group Role",
                "description": "Delete Institution Account Group Role",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "Account identifier for which to remove the role",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "Group identifier for which to remove the role",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "Role identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/accounts/search": {
            "post": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_institution_accounts_search",
                "summary": "Private Account Institution Accounts Search",
                "description": "Returns the accounts for which the account has administrative privileges (assigned and inherited).",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "search",
                        "description": "Search Parameters",
                        "schema": {
                            "$ref": "#/definitions/InstitutionAccountsSearch"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. An array of Accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShortAccount"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/users/{account_id}": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "private_account_institution_user",
                "summary": "Private Account Institution User",
                "description": "Retrieve institution user information using the account_id",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "Account identifier the user is associated to",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. User representation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/reviews": {
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "account_institution_curations",
                "summary": "Institution Curation Reviews",
                "description": "Retrieve a list of curation reviews for this institution",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "group_id",
                        "description": "Filter by the group ID",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    {
                        "in": "query",
                        "name": "article_id",
                        "description": "Retrieve the reviews for this article",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Filter by the status of the review",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected",
                            "closed"
                        ]
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. A list of curation reviews.",
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/Curation"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/institution/review/{curation_id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "curation_id",
                    "description": "ID of the curation",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "account_institution_curation",
                "summary": "Institution Curation Review",
                "description": "Retrieve a certain curation review by its ID",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. A curation review.",
                        "schema": {
                            "$ref": "#/definitions/CurationDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "curation_id",
                        "description": "ID of the curation",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ]
            }
        },
        "/account/institution/review/{curation_id}/comments": {
            "parameters": [
                {
                    "in": "path",
                    "name": "curation_id",
                    "description": "ID of the curation",
                    "required": true,
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                }
            ],
            "get": {
                "tags": [
                    "institutions"
                ],
                "operationId": "get_account_institution_curation_comments",
                "summary": "Institution Curation Review Comments",
                "description": "Retrieve a certain curation review's comments.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results included on a page. Used for pagination with query",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 5000
                    },
                    {
                        "in": "path",
                        "name": "curation_id",
                        "description": "ID of the curation",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. A curation review's comments.",
                        "schema": {
                            "type": "array",
                            "$ref": "#/definitions/CurationComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "institutions"
                ],
                "operationId": "post_account_institution_curation_comments",
                "summary": "POST Institution Curation Review Comment",
                "description": "Add a new comment to the review.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "CurationComment",
                        "description": "The content/value of the comment.",
                        "schema": {
                            "$ref": "#/definitions/CurationCommentCreate"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "curation_id",
                        "description": "ID of the curation",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK."
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/institution/hrfeed/upload": {
            "post": {
                "tags": [
                    "institutions"
                ],
                "operationId": "institution_hrfeed_upload",
                "summary": "Private Institution HRfeed Upload",
                "description": "More info in the <a href=\"#hr_feed\">HR Feed section</a>",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "hrfeed",
                        "type": "file",
                        "description": "You can find an example in the Hr Feed section"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/file/download/{file_id}": {
            "get": {
                "tags": [
                    "other"
                ],
                "operationId": "file_download",
                "summary": "Public File Download",
                "description": "Starts the download of a file",
                "security": [],
                "produces": [
                    "application/force-download"
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/profile": {
            "put": {
                "tags": [
                    "profiles"
                ],
                "operationId": "update_user_profile",
                "summary": "Update public profile",
                "description": "Updates the fields of the user's public profile.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "institution_user_id",
                        "in": "query",
                        "description": "Institutional user ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/ProfileUpdateData"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "example": {
                                "code": 200,
                                "message": "OK"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/account/profile/{user_id}/picture": {
            "post": {
                "tags": [
                    "profiles"
                ],
                "operationId": "update_user_profile_picture",
                "summary": "Update public profile picture",
                "description": "Updates the profile picture of the user's public profile.",
                "security": [
                    {
                        "OAuth2": [
                            "all"
                        ]
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "in": "formData",
                        "name": "profile_picture",
                        "type": "file",
                        "description": "User profile picture",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "example": {
                                "code": 200,
                                "message": "OK"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "AccountGroupRoles": {
            "x-tag": "institutions",
            "type": "object",
            "properties": {},
            "example": {
                "2": [
                    {
                        "category": "group",
                        "id": 7,
                        "name": "User"
                    }
                ]
            }
        },
        "AccountGroupRolesCreate": {
            "x-tag": "institutions",
            "type": "object",
            "properties": {},
            "example": {
                "2": [
                    2,
                    7
                ],
                "3": [
                    7,
                    9
                ]
            }
        },
        "Group": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "id",
                "name",
                "resource_id",
                "parent_id",
                "association_criteria"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Group id",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Materials",
                    "description": "Group name"
                },
                "resource_id": {
                    "type": "string",
                    "example": "",
                    "description": "Group resource id"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Parent group if any",
                    "example": 0
                },
                "association_criteria": {
                    "type": "string",
                    "example": "IT",
                    "description": "HR code associated with group, if code exists"
                }
            }
        },
        "Role": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "id",
                "name",
                "category",
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Role id",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Curator",
                    "description": "Role name"
                },
                "category": {
                    "type": "string",
                    "example": "group",
                    "description": "Role category"
                },
                "description": {
                    "type": "string",
                    "description": "Role description"
                }
            }
        },
        "GroupEmbargoOptions": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "id",
                "type",
                "ip_name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Embargo option id",
                    "example": 364
                },
                "type": {
                    "type": "string",
                    "description": "Embargo permission type",
                    "example": "ip_range",
                    "enum": [
                        "logged_in",
                        "ip_range",
                        "administrator"
                    ]
                },
                "ip_name": {
                    "description": "IP range name; value appears if type is ip_range",
                    "type": "string",
                    "example": "Figshare IP range"
                }
            }
        },
        "Institution": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "id",
                "name",
                "domain"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Institution id",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "description": "Institution name",
                    "example": "Institution"
                },
                "domain": {
                    "description": "Institution domain",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": null
                }
            }
        },
        "ShortCustomField": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "id",
                "name",
                "field_type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Custom field id",
                    "example": 365
                },
                "name": {
                    "type": "string",
                    "description": "Custom field name",
                    "example": "my custom field"
                },
                "field_type": {
                    "description": "Custom field type",
                    "type": "string",
                    "example": "textarea",
                    "enum": [
                        "text",
                        "textarea",
                        "dropdown",
                        "url",
                        "email",
                        "date",
                        "dropdown_large_list"
                    ]
                },
                "settings": {
                    "description": "Settings for the custom field",
                    "type": "object",
                    "example": {
                        "validations": {
                            "min_length": 1,
                            "max_length": 1000
                        },
                        "placeholder": "Enter your custom field here"
                    }
                },
                "order": {
                    "description": "Order of the field in the group",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "is_mandatory": {
                    "description": "Whether the field is mandatory or not",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "ErrorMessage": {
            "x-tag": "common",
            "type": "object",
            "properties": {
                "code": {
                    "description": "A machine friendly error code, used by the dev team to identify the error.",
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "description": "A human friendly message explaining the error.",
                    "type": "string"
                }
            }
        },
        "ProjectCollaboratorInvite": {
            "x-tag": "projects",
            "type": "object",
            "required": [
                "role_name"
            ],
            "properties": {
                "role_name": {
                    "type": "string",
                    "description": "Role of the the collaborator inside the project",
                    "enum": [
                        "viewer",
                        "collaborator"
                    ],
                    "example": "viewer"
                },
                "user_id": {
                    "description": "User id of the collaborator",
                    "type": "integer",
                    "format": "int64",
                    "example": 100008
                },
                "email": {
                    "description": "Collaborator email",
                    "type": "string",
                    "example": "user@domain.com"
                },
                "comment": {
                    "description": "Text sent when inviting the user to the project",
                    "type": "string",
                    "example": "hey"
                }
            }
        },
        "ProjectNote": {
            "x-tag": "projects",
            "type": "object",
            "required": [
                "id",
                "user_id",
                "abstract",
                "user_name",
                "created_date",
                "modified_date"
            ],
            "properties": {
                "id": {
                    "description": "Project note id",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "user_id": {
                    "description": "User who wrote the note",
                    "type": "integer",
                    "format": "int64",
                    "example": 100008
                },
                "abstract": {
                    "description": "Note Abstract - short/truncated content",
                    "type": "string",
                    "example": "text"
                },
                "user_name": {
                    "description": "Username of the one who wrote the note",
                    "type": "string",
                    "example": "user"
                },
                "created_date": {
                    "description": "Date when note was created",
                    "type": "string",
                    "example": "2017-05-16T16:49:11Z"
                },
                "modified_date": {
                    "description": "Date when note was last modified",
                    "type": "string",
                    "example": "2017-05-16T16:49:11Z"
                }
            }
        },
        "ProjectNotePrivate": {
            "x-tag": "projects",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ProjectNote"
                }
            ],
            "required": [
                "text",
                "id",
                "user_id",
                "abstract",
                "user_name",
                "created_date",
                "modified_date"
            ],
            "properties": {
                "text": {
                    "description": "Full text of note",
                    "type": "string",
                    "example": "text"
                },
                "id": {
                    "description": "Project note id",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "user_id": {
                    "description": "User who wrote the note",
                    "type": "integer",
                    "format": "int64",
                    "example": 100008
                },
                "abstract": {
                    "description": "Note Abstract - short/truncated content",
                    "type": "string",
                    "example": "text"
                },
                "user_name": {
                    "description": "Username of the one who wrote the note",
                    "type": "string",
                    "example": "user"
                },
                "created_date": {
                    "description": "Date when note was created",
                    "type": "string",
                    "example": "2017-05-16T16:49:11Z"
                },
                "modified_date": {
                    "description": "Date when note was last modified",
                    "type": "string",
                    "example": "2017-05-16T16:49:11Z"
                }
            }
        },
        "ResponseMessage": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "description": "Response message text",
                    "type": "string",
                    "example": "Project 1 has been published"
                }
            }
        },
        "ProjectNoteCreate": {
            "x-tag": "projects",
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "description": "Text of the note",
                    "type": "string",
                    "minLength": 3,
                    "example": "note to remember"
                }
            }
        },
        "ProjectCreate": {
            "x-tag": "projects",
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title for this project - mandatory. 3 - 1000 characters.",
                    "example": "project title",
                    "maxLength": 1000,
                    "minLength": 3
                },
                "description": {
                    "type": "string",
                    "description": "Project description",
                    "example": "project description",
                    "maxLength": 20000
                },
                "funding": {
                    "type": "string",
                    "description": "Grant number or organization(s) that funded this project. Up to 2000 characters permitted.",
                    "example": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Funding creation / update items",
                    "items": {
                        "$ref": "#/definitions/FundingCreate"
                    }
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Only if project type is group.",
                    "example": 0
                },
                "custom_fields": {
                    "type": "object",
                    "description": "List of key, values pairs to be associated with the project",
                    "example": {
                        "defined_key": "value for it"
                    }
                },
                "custom_fields_list": {
                    "type": "array",
                    "description": "List of custom fields values, supersedes custom_fields parameter",
                    "items": {
                        "$ref": "#/definitions/CustomArticleFieldAdd"
                    }
                }
            }
        },
        "ProjectUpdate": {
            "x-tag": "projects",
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title for this project - mandatory. 3 - 1000 characters.",
                    "example": "project title",
                    "maxLength": 1000,
                    "minLength": 3
                },
                "description": {
                    "type": "string",
                    "description": "Project description",
                    "example": "project description",
                    "maxLength": 20000
                },
                "funding": {
                    "type": "string",
                    "description": "Grant number or organization(s) that funded this project. Up to 2000 characters permitted.",
                    "example": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Funding creation / update items",
                    "items": {
                        "$ref": "#/definitions/FundingCreate"
                    }
                },
                "custom_fields": {
                    "type": "object",
                    "description": "List of key, values pairs to be associated with the project",
                    "example": {
                        "defined_key": "value for it"
                    }
                },
                "custom_fields_list": {
                    "type": "array",
                    "description": "List of custom fields values, supersedes custom_fields parameter",
                    "items": {
                        "$ref": "#/definitions/CustomArticleFieldAdd"
                    }
                }
            }
        },
        "Project": {
            "x-tag": "projects",
            "type": "object",
            "required": [
                "url",
                "published_date",
                "id",
                "title",
                "created_date",
                "modified_date"
            ],
            "properties": {
                "url": {
                    "description": "Api endpoint",
                    "type": "string",
                    "example": "http://api.figshare.com/v2/account/projects/1"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when project was published",
                    "example": "2017-05-16T14:55:08Z"
                },
                "id": {
                    "description": "Project id",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "title": {
                    "description": "Project title",
                    "type": "string",
                    "example": "project"
                },
                "created_date": {
                    "description": "Date when project was created",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                },
                "modified_date": {
                    "description": "Date when project was last modified",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                }
            }
        },
        "ProjectPrivate": {
            "x-tag": "projects",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Project"
                }
            ],
            "required": [
                "role",
                "storage",
                "url",
                "published_date",
                "id",
                "title",
                "created_date",
                "modified_date"
            ],
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "Owner",
                        "Collaborator",
                        "Viewer"
                    ],
                    "description": "Role inside this project",
                    "example": "Owner"
                },
                "storage": {
                    "type": "string",
                    "enum": [
                        "individual",
                        "group"
                    ],
                    "description": "Project storage type",
                    "example": "individual"
                },
                "url": {
                    "description": "Api endpoint",
                    "type": "string",
                    "example": "http://api.figshare.com/v2/account/projects/1"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when project was published",
                    "example": "2017-05-16T14:55:08Z"
                },
                "id": {
                    "description": "Project id",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "title": {
                    "description": "Project title",
                    "type": "string",
                    "example": "project"
                },
                "created_date": {
                    "description": "Date when project was created",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                },
                "modified_date": {
                    "description": "Date when project was last modified",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                }
            }
        },
        "ProjectComplete": {
            "x-tag": "projects",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Project"
                }
            ],
            "required": [
                "funding",
                "funding_list",
                "description",
                "figshare_url",
                "collaborators",
                "url",
                "published_date",
                "id",
                "title",
                "custom_fields",
                "modified_date",
                "created_date"
            ],
            "properties": {
                "funding": {
                    "type": "string",
                    "description": "Project funding",
                    "example": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Full Project funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Project description",
                    "example": "description"
                },
                "figshare_url": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Project public url",
                    "example": "https://figshare.com/projects/project/1"
                },
                "collaborators": {
                    "type": "array",
                    "description": "List of project collaborators",
                    "items": {
                        "$ref": "#/definitions/Collaborator"
                    }
                },
                "custom_fields": {
                    "type": "array",
                    "description": "Project custom fields",
                    "items": {
                        "$ref": "#/definitions/CustomArticleField"
                    }
                },
                "modified_date": {
                    "description": "Date when project was last modified",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                },
                "created_date": {
                    "description": "Date when project was created",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                },
                "url": {
                    "description": "Api endpoint",
                    "type": "string",
                    "example": "http://api.figshare.com/v2/account/projects/1"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when project was published",
                    "example": "2017-05-16T14:55:08Z"
                },
                "id": {
                    "description": "Project id",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "title": {
                    "description": "Project title",
                    "type": "string",
                    "example": "project"
                }
            }
        },
        "ProjectCompletePrivate": {
            "x-tag": "projects",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ProjectPrivate"
                }
            ],
            "required": [
                "funding",
                "funding_list",
                "description",
                "figshare_url",
                "collaborators",
                "quota",
                "used_quota",
                "created_date",
                "modified_date",
                "used_quota_private",
                "used_quota_public",
                "group_id",
                "account_id",
                "custom_fields",
                "role",
                "storage",
                "url",
                "published_date",
                "id",
                "title"
            ],
            "properties": {
                "funding": {
                    "type": "string",
                    "description": "Project funding",
                    "example": "none"
                },
                "funding_list": {
                    "type": "array",
                    "description": "Full Project funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Project description",
                    "example": "description"
                },
                "figshare_url": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Project public url",
                    "example": "https://figshare.com/projects/project/1"
                },
                "collaborators": {
                    "type": "array",
                    "description": "List of project collaborators",
                    "items": {
                        "$ref": "#/definitions/Collaborator"
                    }
                },
                "quota": {
                    "description": "Project quota",
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                },
                "used_quota": {
                    "description": "Project used quota",
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                },
                "created_date": {
                    "description": "Date when project was created",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                },
                "modified_date": {
                    "description": "Date when project was last modified",
                    "type": "string",
                    "example": "2017-05-16T14:52:54Z"
                },
                "used_quota_private": {
                    "description": "Project private quota used",
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                },
                "used_quota_public": {
                    "description": "Project public quota used",
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                },
                "group_id": {
                    "description": "Group of project if any",
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the account owning the project",
                    "example": 1000001
                },
                "custom_fields": {
                    "type": "array",
                    "description": "Collection custom fields",
                    "items": {
                        "$ref": "#/definitions/ShortCustomField"
                    }
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Owner",
                        "Collaborator",
                        "Viewer"
                    ],
                    "description": "Role inside this project",
                    "example": "Owner"
                },
                "storage": {
                    "type": "string",
                    "enum": [
                        "individual",
                        "group"
                    ],
                    "description": "Project storage type",
                    "example": "individual"
                },
                "url": {
                    "description": "Api endpoint",
                    "type": "string",
                    "example": "http://api.figshare.com/v2/account/projects/1"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when project was published",
                    "example": "2017-05-16T14:55:08Z"
                },
                "id": {
                    "description": "Project id",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "title": {
                    "description": "Project title",
                    "type": "string",
                    "example": "project"
                }
            }
        },
        "ProjectCollaborator": {
            "x-tag": "projects",
            "type": "object",
            "required": [
                "status",
                "role_name",
                "user_id",
                "name"
            ],
            "properties": {
                "status": {
                    "description": "Status of collaborator invitation",
                    "type": "string",
                    "example": "invited"
                },
                "role_name": {
                    "description": "Collaborator role",
                    "type": "string",
                    "example": "Owner"
                },
                "user_id": {
                    "description": "Collaborator id",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Collaborator name",
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "Collaborator": {
            "x-tag": "projects",
            "type": "object",
            "required": [
                "role_name",
                "user_id",
                "name"
            ],
            "properties": {
                "role_name": {
                    "description": "Collaborator role",
                    "type": "string",
                    "example": "Owner"
                },
                "user_id": {
                    "description": "Collaborator id",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Collaborator name",
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "InstitutionAccountsSearch": {
            "x-tag": "institutions",
            "type": "object",
            "properties": {
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Filter by active status",
                    "minimum": 0,
                    "maximum": 1
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "institution_user_id": {
                    "description": "filter by institution_user_id",
                    "type": "string",
                    "example": "alan"
                },
                "email": {
                    "description": "filter by email",
                    "type": "string",
                    "example": "alan@institution.com"
                }
            }
        },
        "CommonSearch": {
            "x-tag": "common",
            "type": "object",
            "properties": {
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "order_direction": {
                    "type": "string",
                    "description": "Direction of ordering",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc",
                    "example": "desc"
                },
                "institution": {
                    "description": "only return collections from this institution",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                },
                "published_since": {
                    "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "modified_since": {
                    "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "group": {
                    "description": "only return collections from this group",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                }
            }
        },
        "ProjectsSearch": {
            "x-tag": "projects",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CommonSearch"
                }
            ],
            "properties": {
                "order": {
                    "description": "The field by which to order.",
                    "type": "string",
                    "enum": [
                        "published_date",
                        "modified_date",
                        "views"
                    ],
                    "default": "published_date",
                    "example": "published_date"
                },
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "order_direction": {
                    "type": "string",
                    "description": "Direction of ordering",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc",
                    "example": "desc"
                },
                "institution": {
                    "description": "only return collections from this institution",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                },
                "published_since": {
                    "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "modified_since": {
                    "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "group": {
                    "description": "only return collections from this group",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                }
            }
        },
        "ArticleSearch": {
            "x-tag": "articles",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CommonSearch"
                }
            ],
            "properties": {
                "resource_doi": {
                    "description": "Only return articles with this resource_doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "item_type": {
                    "description": "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "doi": {
                    "description": "Only return articles with this doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "handle": {
                    "description": "Only return articles with this handle",
                    "type": "string",
                    "example": "111084/m9.figshare.14074"
                },
                "project_id": {
                    "description": "Only return articles in this project",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "order": {
                    "description": "The field by which to order",
                    "type": "string",
                    "enum": [
                        "created_date",
                        "published_date",
                        "modified_date",
                        "views",
                        "shares",
                        "downloads",
                        "cites"
                    ],
                    "default": "created_date",
                    "example": "published_date"
                },
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "order_direction": {
                    "type": "string",
                    "description": "Direction of ordering",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc",
                    "example": "desc"
                },
                "institution": {
                    "description": "only return collections from this institution",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                },
                "published_since": {
                    "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "modified_since": {
                    "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "group": {
                    "description": "only return collections from this group",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                }
            }
        },
        "PrivateArticleSearch": {
            "x-tag": "articles",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ArticleSearch"
                }
            ],
            "properties": {
                "resource_id": {
                    "description": "only return collections with this resource_id",
                    "type": "string",
                    "example": "1407024"
                },
                "resource_doi": {
                    "description": "Only return articles with this resource_doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "item_type": {
                    "description": "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "doi": {
                    "description": "Only return articles with this doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "handle": {
                    "description": "Only return articles with this handle",
                    "type": "string",
                    "example": "111084/m9.figshare.14074"
                },
                "project_id": {
                    "description": "Only return articles in this project",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "order": {
                    "description": "The field by which to order",
                    "type": "string",
                    "enum": [
                        "created_date",
                        "published_date",
                        "modified_date",
                        "views",
                        "shares",
                        "downloads",
                        "cites"
                    ],
                    "default": "created_date",
                    "example": "published_date"
                },
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "order_direction": {
                    "type": "string",
                    "description": "Direction of ordering",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc",
                    "example": "desc"
                },
                "institution": {
                    "description": "only return collections from this institution",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                },
                "published_since": {
                    "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "modified_since": {
                    "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "group": {
                    "description": "only return collections from this group",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                }
            }
        },
        "CollectionSearch": {
            "x-tag": "collections",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CommonSearch"
                }
            ],
            "properties": {
                "resource_doi": {
                    "description": "Only return collections with this resource_doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "doi": {
                    "description": "Only return collections with this doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "handle": {
                    "description": "Only return collections with this handle",
                    "type": "string",
                    "example": "10084/figshare.1407024"
                },
                "order": {
                    "description": "The field by which to order.",
                    "type": "string",
                    "enum": [
                        "created_date",
                        "published_date",
                        "modified_date",
                        "views",
                        "shares",
                        "cites"
                    ],
                    "default": "created_date",
                    "example": "published_date"
                },
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "order_direction": {
                    "type": "string",
                    "description": "Direction of ordering",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc",
                    "example": "desc"
                },
                "institution": {
                    "description": "only return collections from this institution",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                },
                "published_since": {
                    "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "modified_since": {
                    "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "group": {
                    "description": "only return collections from this group",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                }
            }
        },
        "PrivateAuthorsSearch": {
            "x-tag": "authors",
            "type": "object",
            "properties": {
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "institution_id": {
                    "type": "integer",
                    "description": "Return only authors associated to this institution",
                    "format": "int64",
                    "example": 1,
                    "minimum": 0
                },
                "orcid": {
                    "type": "string",
                    "description": "Orcid of author"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Return only authors in this group or subgroups of the group",
                    "minimum": 0
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Return only active authors if True"
                },
                "is_public": {
                    "type": "boolean",
                    "description": "Return only authors that have published items if True"
                }
            }
        },
        "PrivateCollectionSearch": {
            "x-tag": "collections",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionSearch"
                }
            ],
            "properties": {
                "resource_id": {
                    "description": "only return collections with this resource_id",
                    "type": "string",
                    "example": "1407024"
                },
                "resource_doi": {
                    "description": "Only return collections with this resource_doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "doi": {
                    "description": "Only return collections with this doi",
                    "type": "string",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "handle": {
                    "description": "Only return collections with this handle",
                    "type": "string",
                    "example": "10084/figshare.1407024"
                },
                "order": {
                    "description": "The field by which to order.",
                    "type": "string",
                    "enum": [
                        "created_date",
                        "published_date",
                        "modified_date",
                        "views",
                        "shares",
                        "cites"
                    ],
                    "default": "created_date",
                    "example": "published_date"
                },
                "search_for": {
                    "type": "string",
                    "description": "Search term",
                    "example": "figshare"
                },
                "page": {
                    "description": "Page number. Used for pagination with page_size",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 1
                },
                "page_size": {
                    "description": "The number of results included on a page. Used for pagination with page",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "example": 10
                },
                "limit": {
                    "description": "Number of results included on a page. Used for pagination with query",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 1000,
                    "example": 10
                },
                "offset": {
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "maximum": 5000,
                    "example": 0
                },
                "order_direction": {
                    "type": "string",
                    "description": "Direction of ordering",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc",
                    "example": "desc"
                },
                "institution": {
                    "description": "only return collections from this institution",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                },
                "published_since": {
                    "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "modified_since": {
                    "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD or date-time(ISO 8601) YYYY-MM-DDTHH:mm:ssZ",
                    "type": "string",
                    "example": "2017-12-22"
                },
                "group": {
                    "description": "only return collections from this group",
                    "type": "integer",
                    "format": "int32",
                    "example": 2000013
                }
            }
        },
        "AccountCreate": {
            "x-tag": "institutions",
            "x-maxCombinedLength": {
                "description": "The combined length of first_name and last_name must not exceed 255 characters."
            },
            "type": "object",
            "required": [
                "email",
                "last_name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email of account",
                    "maxLength": 150,
                    "minLength": 3,
                    "example": "johndoe@example.com"
                },
                "first_name": {
                    "type": "string",
                    "description": "First Name",
                    "default": "",
                    "example": "John",
                    "maxLength": 255
                },
                "last_name": {
                    "type": "string",
                    "description": "Last Name",
                    "default": "",
                    "example": "Doe",
                    "maxLength": 255
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups"
                },
                "institution_user_id": {
                    "type": "string",
                    "description": "Institution user id",
                    "default": "",
                    "example": "johndoe",
                    "maxLength": 50
                },
                "symplectic_user_id": {
                    "type": "string",
                    "description": "Symplectic user id",
                    "default": "",
                    "example": "johndoe",
                    "maxLength": 50
                },
                "quota": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Account quota",
                    "example": 1000
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Is account active"
                }
            }
        },
        "AccountCreateResponse": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "account_id"
            ],
            "properties": {
                "account_id": {
                    "description": "ID of created account",
                    "type": "integer",
                    "format": "int64",
                    "example": 33334444
                }
            }
        },
        "AccountUpdate": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "group_id",
                "is_active"
            ],
            "properties": {
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Is account active"
                }
            }
        },
        "Curation": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "id",
                "group_id",
                "account_id",
                "assigned_to",
                "article_id",
                "version",
                "comments_count",
                "status",
                "created_date",
                "modified_date",
                "review_date",
                "request_number",
                "resolution_comment"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The review id"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The group in which the article is present."
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the account of the owner of the article of this review."
                },
                "assigned_to": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the account to which this review is assigned."
                },
                "article_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the article of this review."
                },
                "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The Version number of the article in review."
                },
                "comments_count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The number of comments in the review."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the review.",
                    "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "closed"
                    ]
                },
                "created_date": {
                    "type": "string",
                    "description": "The creation date of the review."
                },
                "modified_date": {
                    "type": "string",
                    "description": "The date the review has been modified."
                },
                "review_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The last time a comment has been added to the review."
                },
                "request_number": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The request number of the review."
                },
                "resolution_comment": {
                    "type": "string",
                    "description": "The resolution comment of the review."
                }
            }
        },
        "CurationDetail": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "item",
                "id",
                "group_id",
                "account_id",
                "assigned_to",
                "article_id",
                "version",
                "comments_count",
                "status",
                "created_date",
                "modified_date",
                "review_date",
                "request_number",
                "resolution_comment"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/Curation"
                }
            ],
            "properties": {
                "item": {
                    "type": "object",
                    "description": "Article details",
                    "$ref": "#/definitions/ArticleComplete"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The review id"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The group in which the article is present."
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the account of the owner of the article of this review."
                },
                "assigned_to": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the account to which this review is assigned."
                },
                "article_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the article of this review."
                },
                "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The Version number of the article in review."
                },
                "comments_count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The number of comments in the review."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the review.",
                    "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "closed"
                    ]
                },
                "created_date": {
                    "type": "string",
                    "description": "The creation date of the review."
                },
                "modified_date": {
                    "type": "string",
                    "description": "The date the review has been modified."
                },
                "review_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The last time a comment has been added to the review."
                },
                "request_number": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The request number of the review."
                },
                "resolution_comment": {
                    "type": "string",
                    "description": "The resolution comment of the review."
                }
            }
        },
        "CurationComment": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "id",
                "account_id",
                "type",
                "text",
                "created_date",
                "modified_date"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the comment."
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the account which generated this comment."
                },
                "type": {
                    "type": "string",
                    "description": "The ID of the account which generated this comment.",
                    "enum": [
                        "comment",
                        "approved",
                        "rejected",
                        "closed"
                    ]
                },
                "text": {
                    "type": "string",
                    "description": "The value/content of the comment."
                },
                "created_date": {
                    "type": "string",
                    "description": "The creation date of the comment."
                },
                "modified_date": {
                    "type": "string",
                    "description": "The date the comment has been modified."
                }
            }
        },
        "CurationCommentCreate": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The contents/value of the comment",
                    "minLength": 1,
                    "maxLength": 2000
                }
            }
        },
        "Resource": {
            "x-tag": "resource",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of resource item",
                    "default": "",
                    "maxLength": 255,
                    "example": "aaaa23512"
                },
                "title": {
                    "type": "string",
                    "description": "Title of resource item",
                    "default": "",
                    "maxLength": 1000,
                    "example": "Test title"
                },
                "doi": {
                    "type": "string",
                    "description": "DOI of resource item",
                    "default": ""
                },
                "link": {
                    "type": "string",
                    "description": "Link of resource item",
                    "default": "",
                    "maxLength": 255,
                    "example": "https://docs.figshare.com"
                },
                "status": {
                    "type": "string",
                    "description": "Status of resource item",
                    "default": "",
                    "maxLength": 100,
                    "example": "frozen"
                },
                "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Version of resource item",
                    "default": 0,
                    "example": 1
                }
            }
        },
        "ArticleUnpublishData": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "reason"
            ],
            "properties": {
                "reason": {
                    "type": "string",
                    "description": "Reason of article unpublishing",
                    "maxLength": 500,
                    "minLength": 5,
                    "example": "Unpublish article reason"
                }
            }
        },
        "ArticleUpdate": {
            "x-tag": "articles",
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "maxLength": 1000,
                    "minLength": 3,
                    "example": "Test article title"
                },
                "description": {
                    "type": "string",
                    "description": "The article description. In a publisher case, usually this is the remote article description",
                    "default": "",
                    "example": "Test description of article",
                    "maxLength": 20000
                },
                "is_metadata_record": {
                    "description": "True if article has no files",
                    "type": "boolean",
                    "example": true
                },
                "metadata_reason": {
                    "description": "Article metadata reason",
                    "type": "string",
                    "example": "hosted somewhere else"
                },
                "tags": {
                    "type": "array",
                    "description": "List of tags to be associated with the article. Keywords can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "keywords": {
                    "type": "array",
                    "description": "List of tags to be associated with the article. Tags can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "references": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "link"
                    },
                    "description": "List of links to be associated with the article (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
                    "default": [],
                    "example": [
                        "http://figshare.com",
                        "http://api.figshare.com"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "List of category ids to be associated with the article(e.g [1, 23, 33, 66])",
                    "default": [],
                    "example": [
                        1,
                        10,
                        11
                    ]
                },
                "categories_by_source_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of category source ids to be associated with the article, supersedes the categories property",
                    "default": [],
                    "example": [
                        "300204",
                        "400207"
                    ]
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. For adding more authors use the specific authors endpoint.",
                    "default": [],
                    "example": [
                        {
                            "name": "John Doe"
                        },
                        {
                            "id": 1000008
                        }
                    ]
                },
                "custom_fields": {
                    "type": "object",
                    "description": "List of key, values pairs to be associated with the article",
                    "example": {
                        "defined_key": "value for it"
                    }
                },
                "custom_fields_list": {
                    "type": "array",
                    "description": "List of custom fields values, supersedes custom_fields parameter",
                    "items": {
                        "$ref": "#/definitions/CustomArticleFieldAdd"
                    }
                },
                "defined_type": {
                    "type": "string",
                    "description": "<b>One of:</b> <code>figure</code> <code>online resource</code> <code>preprint</code> <code>book</code> <code>conference contribution</code> <code>media</code> <code>dataset</code> <code>poster</code> <code>journal contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>",
                    "example": "media"
                },
                "funding": {
                    "type": "string",
                    "description": "Grant number or funding authority",
                    "default": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Funding creation / update items",
                    "items": {
                        "$ref": "#/definitions/FundingCreate"
                    }
                },
                "license": {
                    "type": "integer",
                    "format": "int64",
                    "description": "License id for this article.",
                    "default": 0,
                    "example": 1
                },
                "doi": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "handle": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/TimelineUpdate"
                },
                "download_disabled": {
                    "type": "boolean",
                    "description": "If true, downloading of files for this article is disabled",
                    "example": false
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups"
                }
            }
        },
        "ArticleVersionUpdate": {
            "x-tag": "article_version",
            "type": "object",
            "properties": {
                "supplementary_fields": {
                    "type": "array",
                    "description": "List of supplementary fields to be associated with the article version",
                    "items": {
                        "type": "object"
                    },
                    "default": [],
                    "example": [
                        {
                            "name": "abc",
                            "value": "def"
                        },
                        {
                            "name": "fname",
                            "value": "fvalue"
                        }
                    ]
                },
                "internal_metadata": {
                    "type": "object",
                    "description": "List of supplementary fields to be associated with the article version",
                    "default": {},
                    "example": {
                        "curation_review_date": "2021-11-16T13:03:38",
                        "export_pdf_download_url": null
                    }
                }
            }
        },
        "ArticleCreate": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "maxLength": 1000,
                    "minLength": 3,
                    "example": "Test article title"
                },
                "description": {
                    "type": "string",
                    "description": "The article description. In a publisher case, usually this is the remote article description",
                    "default": "",
                    "example": "Test description of article",
                    "maxLength": 20000
                },
                "is_metadata_record": {
                    "description": "True if article has no files",
                    "type": "boolean",
                    "example": true
                },
                "metadata_reason": {
                    "description": "Article metadata reason",
                    "type": "string",
                    "example": "hosted somewhere else"
                },
                "tags": {
                    "type": "array",
                    "description": "List of tags to be associated with the article. Keywords can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "keywords": {
                    "type": "array",
                    "description": "List of tags to be associated with the article. Tags can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "references": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "link"
                    },
                    "description": "List of links to be associated with the article (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
                    "default": [],
                    "example": [
                        "http://figshare.com",
                        "http://api.figshare.com"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "List of category ids to be associated with the article(e.g [1, 23, 33, 66])",
                    "default": [],
                    "example": [
                        1,
                        10,
                        11
                    ]
                },
                "categories_by_source_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of category source ids to be associated with the article, supersedes the categories property",
                    "default": [],
                    "example": [
                        "300204",
                        "400207"
                    ]
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. For adding more authors use the specific authors endpoint.",
                    "default": [],
                    "example": [
                        {
                            "name": "John Doe"
                        },
                        {
                            "id": 1000008
                        }
                    ]
                },
                "custom_fields": {
                    "type": "object",
                    "description": "List of key, values pairs to be associated with the article",
                    "example": {
                        "defined_key": "value for it"
                    }
                },
                "custom_fields_list": {
                    "type": "array",
                    "description": "List of custom fields values, supersedes custom_fields parameter",
                    "items": {
                        "$ref": "#/definitions/CustomArticleFieldAdd"
                    }
                },
                "defined_type": {
                    "type": "string",
                    "description": "<b>One of:</b> <code>figure</code> <code>online resource</code> <code>preprint</code> <code>book</code> <code>conference contribution</code> <code>media</code> <code>dataset</code> <code>poster</code> <code>journal contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>",
                    "example": "media"
                },
                "funding": {
                    "type": "string",
                    "description": "Grant number or funding authority",
                    "default": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Funding creation / update items",
                    "items": {
                        "$ref": "#/definitions/FundingCreate"
                    }
                },
                "license": {
                    "type": "integer",
                    "format": "int64",
                    "description": "License id for this article.",
                    "default": 0,
                    "example": 1
                },
                "doi": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "handle": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/TimelineUpdate"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups"
                }
            }
        },
        "PrivateProjectArticle": {
            "x-tag": "articles",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ProjectArticle"
                }
            ],
            "required": [
                "files",
                "embargo_options",
                "custom_fields",
                "account_id",
                "download_disabled",
                "authors",
                "figshare_url",
                "group_resource_id",
                "curation_status"
            ],
            "properties": {
                "files": {
                    "type": "array",
                    "description": "List of up to 10 article files.",
                    "items": {
                        "$ref": "#/definitions/PublicFile"
                    }
                },
                "embargo_options": {
                    "type": "array",
                    "description": "List of embargo options",
                    "items": {
                        "$ref": "#/definitions/GroupEmbargoOptions"
                    }
                },
                "custom_fields": {
                    "type": "array",
                    "description": "List of custom fields values",
                    "items": {
                        "$ref": "#/definitions/CustomArticleField"
                    }
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the account owning the article",
                    "example": 1000001
                },
                "download_disabled": {
                    "type": "boolean",
                    "description": "If true, downloading of files for this article is disabled",
                    "example": false
                },
                "authors": {
                    "type": "array",
                    "description": "List of authors",
                    "items": {
                        "$ref": "#/definitions/Author"
                    }
                },
                "figshare_url": {
                    "type": "string",
                    "format": "url",
                    "description": "Article public url",
                    "example": "http://figshare.com/articles/media/article_name/2000005"
                },
                "group_resource_id": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Collection group resource id",
                    "example": 1
                },
                "curation_status": {
                    "type": "string",
                    "description": "Curation status of the article",
                    "example": "approved"
                },
                "citation": {
                    "type": "string",
                    "description": "Article citation",
                    "example": "lilliput, figshare admin (2017): first project item. figshare.\n \n Retrieved: 14 01, May 22, 2017 (GMT)"
                },
                "confidential_reason": {
                    "description": "Confidentiality reason",
                    "type": "string",
                    "example": "none"
                },
                "embargo_type": {
                    "description": "Article embargo",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "article"
                },
                "is_confidential": {
                    "description": "Article Confidentiality",
                    "type": "boolean",
                    "example": true
                },
                "size": {
                    "description": "Article size",
                    "type": "integer",
                    "format": "int64",
                    "example": 69939
                },
                "funding": {
                    "type": "string",
                    "description": "Article funding",
                    "example": "none"
                },
                "funding_list": {
                    "type": "array",
                    "description": "Full Article funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "tags": {
                    "description": "List of article tags. Keywords can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "keywords": {
                    "description": "List of article keywords. Tags can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "version": {
                    "description": "Article version",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "is_metadata_record": {
                    "description": "True if article has no files",
                    "type": "boolean",
                    "example": false
                },
                "metadata_reason": {
                    "description": "Article metadata reason",
                    "type": "string",
                    "example": "hosted somewhere else"
                },
                "status": {
                    "type": "string",
                    "description": "Article status",
                    "example": "public"
                },
                "description": {
                    "type": "string",
                    "description": "Article description",
                    "example": "article description"
                },
                "is_embargoed": {
                    "type": "boolean",
                    "description": "True if article is embargoed",
                    "example": true
                },
                "embargo_date": {
                    "description": "Date when embargo lifts",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "is_public": {
                    "description": "True if article is published",
                    "type": "boolean",
                    "example": true
                },
                "modified_date": {
                    "description": "Date when article was last modified",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when article was created",
                    "example": "2017-05-18T11:49:03Z"
                },
                "has_linked_file": {
                    "type": "boolean",
                    "description": "True if any files are linked to the article",
                    "example": true
                },
                "categories": {
                    "type": "array",
                    "description": "List of categories selected for the article",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "license": {
                    "description": "Article selected license",
                    "$ref": "#/definitions/License"
                },
                "embargo_title": {
                    "type": "string",
                    "description": "Title for embargo",
                    "example": "File(s) under embargo"
                },
                "embargo_reason": {
                    "type": "string",
                    "description": "Reason for embargo",
                    "example": "not complete"
                },
                "references": {
                    "type": "array",
                    "description": "List of references",
                    "items": {
                        "type": "string",
                        "format": "url"
                    },
                    "example": [
                        "http://figshare.com",
                        "http://figshare.com/api"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                }
            }
        },
        "ArticleProjectCreate": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "maxLength": 1000,
                    "minLength": 3,
                    "example": "Test article title"
                },
                "description": {
                    "type": "string",
                    "description": "The article description. In a publisher case, usually this is the remote article description",
                    "default": "",
                    "example": "Test description of article",
                    "maxLength": 20000
                },
                "tags": {
                    "type": "array",
                    "description": "List of tags to be associated with the article. Keywords can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "keywords": {
                    "type": "array",
                    "description": "List of tags to be associated with the article. Tags can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "references": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "link"
                    },
                    "description": "List of links to be associated with the article (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
                    "default": [],
                    "example": [
                        "http://figshare.com",
                        "http://api.figshare.com"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "List of category ids to be associated with the article(e.g [1, 23, 33, 66])",
                    "default": [],
                    "example": [
                        1,
                        10,
                        11
                    ]
                },
                "categories_by_source_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of category source ids to be associated with the article, supersedes the categories property",
                    "default": [],
                    "example": [
                        "300204",
                        "400207"
                    ]
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. For adding more authors use the specific authors endpoint.",
                    "default": [],
                    "example": [
                        {
                            "name": "John Doe"
                        },
                        {
                            "id": 1000008
                        }
                    ]
                },
                "custom_fields": {
                    "type": "object",
                    "description": "List of key, values pairs to be associated with the article",
                    "example": {
                        "defined_key": "value for it"
                    }
                },
                "custom_fields_list": {
                    "type": "array",
                    "description": "List of custom fields values, supersedes custom_fields parameter",
                    "items": {
                        "$ref": "#/definitions/CustomArticleFieldAdd"
                    }
                },
                "defined_type": {
                    "type": "string",
                    "description": "<b>One of:</b> <code>figure</code> <code>online resource</code> <code>preprint</code> <code>book</code> <code>conference contribution</code> <code>media</code> <code>dataset</code> <code>poster</code> <code>journal contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>",
                    "example": "media"
                },
                "funding": {
                    "type": "string",
                    "description": "Grant number or funding authority",
                    "default": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Funding creation / update items",
                    "items": {
                        "$ref": "#/definitions/FundingCreate"
                    }
                },
                "license": {
                    "type": "integer",
                    "format": "int64",
                    "description": "License id for this article.",
                    "default": 0,
                    "example": 1
                },
                "doi": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "handle": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/TimelineUpdate"
                }
            }
        },
        "Article": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "id",
                "title",
                "resource_doi",
                "resource_title",
                "doi",
                "handle",
                "group_id",
                "url",
                "url_public_html",
                "url_public_api",
                "url_private_html",
                "url_private_api",
                "published_date",
                "timeline",
                "thumb",
                "defined_type",
                "defined_type_name",
                "created_date",
                "modified_date"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique identifier for article",
                    "example": 1434614
                },
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "example": "Test article title"
                },
                "doi": {
                    "type": "string",
                    "description": "DOI",
                    "example": "10.6084/m9.figshare.1434614"
                },
                "handle": {
                    "type": "string",
                    "description": "Handle",
                    "example": "111184/figshare.1234"
                },
                "group_id": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "Group ID",
                    "example": 1234
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint for article",
                    "format": "url",
                    "example": "http://api.figshare.com/articles/1434614"
                },
                "url_public_html": {
                    "type": "string",
                    "description": "Public site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/articles/media/Test_article_title/1434614"
                },
                "url_public_api": {
                    "type": "string",
                    "description": "Public Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/articles/1434614"
                },
                "url_private_html": {
                    "type": "string",
                    "description": "Private site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/account/articles/1434614"
                },
                "url_private_api": {
                    "type": "string",
                    "description": "Private Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/account/articles/1434614"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Posted date",
                    "example": "2015-12-31T23:59:59.000Z"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "thumb": {
                    "type": "string",
                    "description": "Thumbnail image",
                    "format": "url",
                    "example": "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
                },
                "defined_type": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Type of article identifier",
                    "example": 3
                },
                "defined_type_name": {
                    "type": "string",
                    "description": "Name of the article type identifier",
                    "example": "media"
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when article was created",
                    "example": "2017-05-18T11:49:03Z"
                },
                "modified_date": {
                    "description": "Date when article was last modified",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                }
            }
        },
        "ArticleWithProject": {
            "x-tag": "articles_with_project",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Article"
                }
            ],
            "required": [
                "project_id",
                "id",
                "title",
                "doi",
                "handle",
                "group_id",
                "url",
                "url_public_html",
                "url_public_api",
                "url_private_html",
                "url_private_api",
                "published_date",
                "timeline",
                "thumb",
                "defined_type",
                "defined_type_name",
                "created_date",
                "modified_date"
            ],
            "properties": {
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project id for this article.",
                    "default": 0,
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique identifier for article",
                    "example": 1434614
                },
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "example": "Test article title"
                },
                "doi": {
                    "type": "string",
                    "description": "DOI",
                    "example": "10.6084/m9.figshare.1434614"
                },
                "handle": {
                    "type": "string",
                    "description": "Handle",
                    "example": "111184/figshare.1234"
                },
                "group_id": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "Group ID",
                    "example": 1234
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint for article",
                    "format": "url",
                    "example": "http://api.figshare.com/articles/1434614"
                },
                "url_public_html": {
                    "type": "string",
                    "description": "Public site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/articles/media/Test_article_title/1434614"
                },
                "url_public_api": {
                    "type": "string",
                    "description": "Public Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/articles/1434614"
                },
                "url_private_html": {
                    "type": "string",
                    "description": "Private site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/account/articles/1434614"
                },
                "url_private_api": {
                    "type": "string",
                    "description": "Private Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/account/articles/1434614"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Posted date",
                    "example": "2015-12-31T23:59:59.000Z"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "thumb": {
                    "type": "string",
                    "description": "Thumbnail image",
                    "format": "url",
                    "example": "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
                },
                "defined_type": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Type of article identifier",
                    "example": 3
                },
                "defined_type_name": {
                    "type": "string",
                    "description": "Name of the article type identifier",
                    "example": "media"
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when article was created",
                    "example": "2017-05-18T11:49:03Z"
                },
                "modified_date": {
                    "description": "Date when article was last modified",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                }
            }
        },
        "TimelineUpdate": {
            "x-tag": "timeline_update",
            "type": "object",
            "properties": {
                "firstOnline": {
                    "type": "string",
                    "description": "Online posted date",
                    "example": "2015-12-31"
                },
                "publisherPublication": {
                    "type": "string",
                    "description": "Publish date",
                    "example": "2015-12-31"
                },
                "publisherAcceptance": {
                    "type": "string",
                    "description": "Date when the item was accepted for publication",
                    "example": "2015-12-31"
                }
            }
        },
        "Timeline": {
            "x-tag": "timeline",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TimelineUpdate"
                }
            ],
            "required": [
                "posted",
                "submission",
                "revision",
                "firstOnline",
                "publisherPublication",
                "publisherAcceptance"
            ],
            "properties": {
                "posted": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Posted date",
                    "example": "2015-12-31"
                },
                "submission": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Submission date in curation (if curated)",
                    "example": "2015-12-31"
                },
                "revision": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Revision date from curation (if curated)",
                    "example": "2015-12-31"
                },
                "firstOnline": {
                    "type": "string",
                    "description": "Online posted date",
                    "example": "2015-12-31"
                },
                "publisherPublication": {
                    "type": "string",
                    "description": "Publish date",
                    "example": "2015-12-31"
                },
                "publisherAcceptance": {
                    "type": "string",
                    "description": "Date when the item was accepted for publication",
                    "example": "2015-12-31"
                }
            }
        },
        "ProjectArticle": {
            "x-tag": "articles",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Article"
                }
            ],
            "required": [
                "citation",
                "confidential_reason",
                "embargo_type",
                "is_confidential",
                "size",
                "funding",
                "funding_list",
                "tags",
                "keywords",
                "version",
                "is_metadata_record",
                "metadata_reason",
                "status",
                "description",
                "is_embargoed",
                "embargo_date",
                "is_public",
                "modified_date",
                "created_date",
                "has_linked_file",
                "categories",
                "license",
                "embargo_title",
                "embargo_reason",
                "references",
                "id",
                "title",
                "doi",
                "handle",
                "group_id",
                "url",
                "url_public_html",
                "url_public_api",
                "url_private_html",
                "url_private_api",
                "published_date",
                "timeline",
                "thumb",
                "defined_type",
                "defined_type_name"
            ],
            "properties": {
                "citation": {
                    "type": "string",
                    "description": "Article citation",
                    "example": "lilliput, figshare admin (2017): first project item. figshare.\n \n Retrieved: 14 01, May 22, 2017 (GMT)"
                },
                "confidential_reason": {
                    "description": "Confidentiality reason",
                    "type": "string",
                    "example": "none"
                },
                "embargo_type": {
                    "description": "Article embargo",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "article"
                },
                "is_confidential": {
                    "description": "Article Confidentiality",
                    "type": "boolean",
                    "example": true
                },
                "size": {
                    "description": "Article size",
                    "type": "integer",
                    "format": "int64",
                    "example": 69939
                },
                "funding": {
                    "type": "string",
                    "description": "Article funding",
                    "example": "none"
                },
                "funding_list": {
                    "type": "array",
                    "description": "Full Article funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "tags": {
                    "description": "List of article tags. Keywords can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "keywords": {
                    "description": "List of article keywords. Tags can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "version": {
                    "description": "Article version",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "is_metadata_record": {
                    "description": "True if article has no files",
                    "type": "boolean",
                    "example": false
                },
                "metadata_reason": {
                    "description": "Article metadata reason",
                    "type": "string",
                    "example": "hosted somewhere else"
                },
                "status": {
                    "type": "string",
                    "description": "Article status",
                    "example": "public"
                },
                "description": {
                    "type": "string",
                    "description": "Article description",
                    "example": "article description"
                },
                "is_embargoed": {
                    "type": "boolean",
                    "description": "True if article is embargoed",
                    "example": true
                },
                "embargo_date": {
                    "description": "Date when embargo lifts",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "is_public": {
                    "description": "True if article is published",
                    "type": "boolean",
                    "example": true
                },
                "modified_date": {
                    "description": "Date when article was last modified",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when article was created",
                    "example": "2017-05-18T11:49:03Z"
                },
                "has_linked_file": {
                    "type": "boolean",
                    "description": "True if any files are linked to the article",
                    "example": true
                },
                "categories": {
                    "type": "array",
                    "description": "List of categories selected for the article",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "license": {
                    "description": "Article selected license",
                    "$ref": "#/definitions/License"
                },
                "embargo_title": {
                    "type": "string",
                    "description": "Title for embargo",
                    "example": "File(s) under embargo"
                },
                "embargo_reason": {
                    "type": "string",
                    "description": "Reason for embargo",
                    "example": "not complete"
                },
                "references": {
                    "type": "array",
                    "description": "List of references",
                    "items": {
                        "type": "string",
                        "format": "url"
                    },
                    "example": [
                        "http://figshare.com",
                        "http://figshare.com/api"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique identifier for article",
                    "example": 1434614
                },
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "example": "Test article title"
                },
                "doi": {
                    "type": "string",
                    "description": "DOI",
                    "example": "10.6084/m9.figshare.1434614"
                },
                "handle": {
                    "type": "string",
                    "description": "Handle",
                    "example": "111184/figshare.1234"
                },
                "group_id": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "Group ID",
                    "example": 1234
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint for article",
                    "format": "url",
                    "example": "http://api.figshare.com/articles/1434614"
                },
                "url_public_html": {
                    "type": "string",
                    "description": "Public site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/articles/media/Test_article_title/1434614"
                },
                "url_public_api": {
                    "type": "string",
                    "description": "Public Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/articles/1434614"
                },
                "url_private_html": {
                    "type": "string",
                    "description": "Private site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/account/articles/1434614"
                },
                "url_private_api": {
                    "type": "string",
                    "description": "Private Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/account/articles/1434614"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Posted date",
                    "example": "2015-12-31T23:59:59.000Z"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "thumb": {
                    "type": "string",
                    "description": "Thumbnail image",
                    "format": "url",
                    "example": "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
                },
                "defined_type": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Type of article identifier",
                    "example": 3
                },
                "defined_type_name": {
                    "type": "string",
                    "description": "Name of the article type identifier",
                    "example": "media"
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                }
            }
        },
        "ArticleComplete": {
            "x-tag": "articles",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ProjectArticle"
                }
            ],
            "required": [
                "figshare_url",
                "resource_title",
                "resource_doi",
                "files",
                "folder_structure",
                "authors",
                "custom_fields",
                "embargo_options",
                "citation",
                "confidential_reason",
                "embargo_type",
                "is_confidential",
                "size",
                "funding",
                "funding_list",
                "tags",
                "keywords",
                "version",
                "is_metadata_record",
                "metadata_reason",
                "status",
                "description",
                "is_embargoed",
                "embargo_date",
                "is_public",
                "modified_date",
                "created_date",
                "has_linked_file",
                "categories",
                "license",
                "embargo_title",
                "embargo_reason",
                "references",
                "id",
                "title",
                "doi",
                "handle",
                "group_id",
                "url",
                "url_public_html",
                "url_public_api",
                "url_private_html",
                "url_private_api",
                "published_date",
                "timeline",
                "thumb",
                "defined_type",
                "defined_type_name",
                "download_disabled"
            ],
            "properties": {
                "figshare_url": {
                    "type": "string",
                    "format": "url",
                    "description": "Article public url",
                    "example": "http://figshare.com/articles/media/article_name/2000005"
                },
                "download_disabled": {
                    "type": "boolean",
                    "description": "If true, downloading of files for this article is disabled",
                    "example": false
                },
                "files": {
                    "type": "array",
                    "description": "List of up to 10 article files.",
                    "items": {
                        "$ref": "#/definitions/PublicFile"
                    }
                },
                "folder_structure": {
                    "type": "object",
                    "description": "Mapping of file ids to folder paths, if folders are used",
                    "example": {
                        "3000002": "Test Folder"
                    }
                },
                "authors": {
                    "type": "array",
                    "description": "List of article authors",
                    "items": {
                        "$ref": "#/definitions/Author"
                    }
                },
                "custom_fields": {
                    "type": "array",
                    "description": "List of custom fields values",
                    "items": {
                        "$ref": "#/definitions/CustomArticleField"
                    }
                },
                "embargo_options": {
                    "type": "array",
                    "description": "List of embargo options",
                    "items": {
                        "$ref": "#/definitions/GroupEmbargoOptions"
                    }
                },
                "citation": {
                    "type": "string",
                    "description": "Article citation",
                    "example": "lilliput, figshare admin (2017): first project item. figshare.\n \n Retrieved: 14 01, May 22, 2017 (GMT)"
                },
                "confidential_reason": {
                    "description": "Confidentiality reason",
                    "type": "string",
                    "example": "none"
                },
                "embargo_type": {
                    "description": "Article embargo",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "article"
                },
                "is_confidential": {
                    "description": "Article Confidentiality",
                    "type": "boolean",
                    "example": true
                },
                "size": {
                    "description": "Article size",
                    "type": "integer",
                    "format": "int64",
                    "example": 69939
                },
                "funding": {
                    "type": "string",
                    "description": "Article funding",
                    "example": "none"
                },
                "funding_list": {
                    "type": "array",
                    "description": "Full Article funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "tags": {
                    "description": "List of article tags. Keywords can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "keywords": {
                    "description": "List of article keywords. Tags can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "version": {
                    "description": "Article version",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "is_metadata_record": {
                    "description": "True if article has no files",
                    "type": "boolean",
                    "example": false
                },
                "metadata_reason": {
                    "description": "Article metadata reason",
                    "type": "string",
                    "example": "hosted somewhere else"
                },
                "status": {
                    "type": "string",
                    "description": "Article status",
                    "example": "public"
                },
                "description": {
                    "type": "string",
                    "description": "Article description",
                    "example": "article description"
                },
                "is_embargoed": {
                    "type": "boolean",
                    "description": "True if article is embargoed",
                    "example": true
                },
                "embargo_date": {
                    "description": "Date when embargo lifts",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "is_public": {
                    "description": "True if article is published",
                    "type": "boolean",
                    "example": true
                },
                "modified_date": {
                    "description": "Date when article was last modified",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when article was created",
                    "example": "2017-05-18T11:49:03Z"
                },
                "has_linked_file": {
                    "type": "boolean",
                    "description": "True if any files are linked to the article",
                    "example": true
                },
                "categories": {
                    "type": "array",
                    "description": "List of categories selected for the article",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "license": {
                    "description": "Article selected license",
                    "$ref": "#/definitions/License"
                },
                "embargo_title": {
                    "type": "string",
                    "description": "Title for embargo",
                    "example": "File(s) under embargo"
                },
                "embargo_reason": {
                    "type": "string",
                    "description": "Reason for embargo",
                    "example": "not complete"
                },
                "references": {
                    "type": "array",
                    "description": "List of references",
                    "items": {
                        "type": "string",
                        "format": "url"
                    },
                    "example": [
                        "http://figshare.com",
                        "http://figshare.com/api"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique identifier for article",
                    "example": 1434614
                },
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "example": "Test article title"
                },
                "doi": {
                    "type": "string",
                    "description": "DOI",
                    "example": "10.6084/m9.figshare.1434614"
                },
                "handle": {
                    "type": "string",
                    "description": "Handle",
                    "example": "111184/figshare.1234"
                },
                "group_id": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "Group ID",
                    "example": 1234
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint for article",
                    "format": "url",
                    "example": "http://api.figshare.com/articles/1434614"
                },
                "url_public_html": {
                    "type": "string",
                    "description": "Public site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/articles/media/Test_article_title/1434614"
                },
                "url_public_api": {
                    "type": "string",
                    "description": "Public Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/articles/1434614"
                },
                "url_private_html": {
                    "type": "string",
                    "description": "Private site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/account/articles/1434614"
                },
                "url_private_api": {
                    "type": "string",
                    "description": "Private Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/account/articles/1434614"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Posted date",
                    "example": "2015-12-31T23:59:59.000Z"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "thumb": {
                    "type": "string",
                    "description": "Thumbnail image",
                    "format": "url",
                    "example": "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
                },
                "defined_type": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Type of article identifier",
                    "example": 3
                },
                "defined_type_name": {
                    "type": "string",
                    "description": "Name of the article type identifier",
                    "example": "media"
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                }
            }
        },
        "ArticleCompletePrivate": {
            "x-tag": "articles",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ArticleComplete"
                }
            ],
            "required": [
                "group_resource_id",
                "account_id",
                "figshare_url",
                "resource_title",
                "resource_doi",
                "files",
                "folder_structure",
                "authors",
                "custom_fields",
                "embargo_options",
                "citation",
                "confidential_reason",
                "embargo_type",
                "is_confidential",
                "size",
                "funding",
                "funding_list",
                "array[integer](optional)",
                "tags",
                "keywords",
                "version",
                "is_metadata_record",
                "metadata_reason",
                "status",
                "description",
                "is_embargoed",
                "embargo_date",
                "is_public",
                "modified_date",
                "created_date",
                "has_linked_file",
                "categories",
                "license",
                "embargo_title",
                "embargo_reason",
                "references",
                "id",
                "title",
                "doi",
                "handle",
                "group_id",
                "url",
                "url_public_html",
                "url_public_api",
                "url_private_html",
                "url_private_api",
                "published_date",
                "timeline",
                "thumb",
                "defined_type",
                "defined_type_name",
                "download_disabled",
                "curation_status"
            ],
            "properties": {
                "group_resource_id": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Group resource id",
                    "example": 1
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the account owning the article",
                    "example": 1000001
                },
                "curation_status": {
                    "type": "string",
                    "description": "Curation status of the article",
                    "example": "approved"
                },
                "figshare_url": {
                    "type": "string",
                    "format": "url",
                    "description": "Article public url",
                    "example": "http://figshare.com/articles/media/article_name/2000005"
                },
                "download_disabled": {
                    "type": "boolean",
                    "description": "If true, downloading of files for this article is disabled",
                    "example": false
                },
                "files": {
                    "type": "array",
                    "description": "List of up to 10 article files.",
                    "items": {
                        "$ref": "#/definitions/PublicFile"
                    }
                },
                "folder_structure": {
                    "type": "object",
                    "description": "Mapping of file ids to folder paths, if folders are used",
                    "example": {
                        "3000002": "Test Folder"
                    }
                },
                "authors": {
                    "type": "array",
                    "description": "List of article authors",
                    "items": {
                        "$ref": "#/definitions/Author"
                    }
                },
                "custom_fields": {
                    "type": "array",
                    "description": "List of custom fields values",
                    "items": {
                        "$ref": "#/definitions/CustomArticleField"
                    }
                },
                "embargo_options": {
                    "type": "array",
                    "description": "List of embargo options",
                    "items": {
                        "$ref": "#/definitions/GroupEmbargoOptions"
                    }
                },
                "citation": {
                    "type": "string",
                    "description": "Article citation",
                    "example": "lilliput, figshare admin (2017): first project item. figshare.\n \n Retrieved: 14 01, May 22, 2017 (GMT)"
                },
                "confidential_reason": {
                    "description": "Confidentiality reason",
                    "type": "string",
                    "example": "none"
                },
                "embargo_type": {
                    "description": "Article embargo",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "article"
                },
                "is_confidential": {
                    "description": "Article Confidentiality",
                    "type": "boolean",
                    "example": true
                },
                "size": {
                    "description": "Article size",
                    "type": "integer",
                    "format": "int64",
                    "example": 69939
                },
                "funding": {
                    "type": "string",
                    "description": "Article funding",
                    "example": "none"
                },
                "funding_list": {
                    "type": "array",
                    "description": "Full Article funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "tags": {
                    "description": "List of article tags. Keywords can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "keywords": {
                    "description": "List of article keywords. Tags can be used instead",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2",
                        "t3"
                    ]
                },
                "version": {
                    "description": "Article version",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "is_metadata_record": {
                    "description": "True if article has no files",
                    "type": "boolean",
                    "example": false
                },
                "metadata_reason": {
                    "description": "Article metadata reason",
                    "type": "string",
                    "example": "hosted somewhere else"
                },
                "status": {
                    "type": "string",
                    "description": "Article status",
                    "example": "public"
                },
                "description": {
                    "type": "string",
                    "description": "Article description",
                    "example": "article description"
                },
                "is_embargoed": {
                    "type": "boolean",
                    "description": "True if article is embargoed",
                    "example": true
                },
                "embargo_date": {
                    "description": "Date when embargo lifts",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "is_public": {
                    "description": "True if article is published",
                    "type": "boolean",
                    "example": true
                },
                "modified_date": {
                    "description": "Date when article was last modified",
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "2017-05-18T11:49:03Z"
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when article was created",
                    "example": "2017-05-18T11:49:03Z"
                },
                "has_linked_file": {
                    "type": "boolean",
                    "description": "True if any files are linked to the article",
                    "example": true
                },
                "categories": {
                    "type": "array",
                    "description": "List of categories selected for the article",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "license": {
                    "description": "Article selected license",
                    "$ref": "#/definitions/License"
                },
                "embargo_title": {
                    "type": "string",
                    "description": "Title for embargo",
                    "example": "File(s) under embargo"
                },
                "embargo_reason": {
                    "type": "string",
                    "description": "Reason for embargo",
                    "example": "not complete"
                },
                "references": {
                    "type": "array",
                    "description": "List of references",
                    "items": {
                        "type": "string",
                        "format": "url"
                    },
                    "example": [
                        "http://figshare.com",
                        "http://figshare.com/api"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique identifier for article",
                    "example": 1434614
                },
                "title": {
                    "type": "string",
                    "description": "Title of article",
                    "example": "Test article title"
                },
                "doi": {
                    "type": "string",
                    "description": "DOI",
                    "example": "10.6084/m9.figshare.1434614"
                },
                "handle": {
                    "type": "string",
                    "description": "Handle",
                    "example": "111184/figshare.1234"
                },
                "group_id": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "Group ID",
                    "example": 1234
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint for article",
                    "format": "url",
                    "example": "http://api.figshare.com/articles/1434614"
                },
                "url_public_html": {
                    "type": "string",
                    "description": "Public site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/articles/media/Test_article_title/1434614"
                },
                "url_public_api": {
                    "type": "string",
                    "description": "Public Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/articles/1434614"
                },
                "url_private_html": {
                    "type": "string",
                    "description": "Private site endpoint for article",
                    "format": "url",
                    "example": "https://figshare.com/account/articles/1434614"
                },
                "url_private_api": {
                    "type": "string",
                    "description": "Private Api endpoint for article",
                    "format": "url",
                    "example": "https://api.figshare.com/account/articles/1434614"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Posted date",
                    "example": "2015-12-31T23:59:59.000Z"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "thumb": {
                    "type": "string",
                    "description": "Thumbnail image",
                    "format": "url",
                    "example": "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
                },
                "defined_type": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Type of article identifier",
                    "example": 3
                },
                "defined_type_name": {
                    "type": "string",
                    "description": "Name of the article type identifier",
                    "example": "media"
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_title": {
                    "type": "string",
                    "description": "Deprecated by related materials. Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                }
            }
        },
        "CollectionCompletePrivate": {
            "x-tag": "collections",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Collection"
                }
            ],
            "required": [
                "account_id",
                "funding",
                "resource_id",
                "resource_doi",
                "resource_title",
                "resource_link",
                "resource_version",
                "version",
                "description",
                "categories",
                "references",
                "tags",
                "keywords",
                "authors",
                "institution_id",
                "group_id",
                "articles_count",
                "public",
                "citation",
                "group_resource_id",
                "custom_fields",
                "modified_date",
                "created_date",
                "timeline",
                "id",
                "title",
                "doi",
                "handle",
                "url",
                "published_date"
            ],
            "properties": {
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the account owning the collection",
                    "example": 1000001
                },
                "funding": {
                    "type": "array",
                    "description": "Full Collection funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "resource_id": {
                    "type": "string",
                    "description": "Collection resource id",
                    "example": ""
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Collection resource doi",
                    "example": "10.6084/m9.figshare.123"
                },
                "resource_title": {
                    "type": "string",
                    "description": "Collection resource title",
                    "example": "test"
                },
                "resource_link": {
                    "type": "string",
                    "description": "Collection resource link",
                    "example": "http://figshare.com"
                },
                "resource_version": {
                    "type": "integer",
                    "description": "Collection resource version",
                    "format": "int64",
                    "example": 0
                },
                "version": {
                    "type": "integer",
                    "description": "Collection version",
                    "format": "int64",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "description": "Collection description",
                    "example": "description"
                },
                "categories": {
                    "type": "array",
                    "description": "List of collection categories",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "references": {
                    "type": "array",
                    "description": "List of collection references",
                    "items": {
                        "type": "string",
                        "format": "url"
                    }
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "description": "List of collection tags. Keywords can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2"
                    ]
                },
                "keywords": {
                    "type": "array",
                    "description": "List of collection keywords. Tags can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2"
                    ]
                },
                "authors": {
                    "type": "array",
                    "description": "List of collection authors",
                    "items": {
                        "$ref": "#/definitions/Author"
                    }
                },
                "institution_id": {
                    "type": "integer",
                    "description": "Collection institution",
                    "format": "int64",
                    "example": 1
                },
                "group_id": {
                    "type": "integer",
                    "description": "Collection group",
                    "format": "int64",
                    "example": 1
                },
                "articles_count": {
                    "type": "integer",
                    "description": "Number of articles in collection",
                    "format": "int64",
                    "example": 1
                },
                "public": {
                    "type": "boolean",
                    "description": "True if collection is published",
                    "example": true
                },
                "citation": {
                    "type": "string",
                    "description": "Collection citation",
                    "example": "citation"
                },
                "group_resource_id": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Collection group resource id",
                    "example": 1
                },
                "custom_fields": {
                    "type": "array",
                    "description": "Collection custom fields",
                    "items": {
                        "$ref": "#/definitions/CustomArticleField"
                    }
                },
                "modified_date": {
                    "type": "string",
                    "description": "Date when collection was last modified",
                    "example": "2017-05-15T15:12:26Z"
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when collection was created",
                    "example": "2017-05-15T15:12:26Z"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Collection id",
                    "example": 123
                },
                "title": {
                    "type": "string",
                    "description": "Collection title",
                    "example": "Sample collection"
                },
                "doi": {
                    "type": "string",
                    "description": "Collection DOI",
                    "example": "10.6084/m9.figshare.123"
                },
                "handle": {
                    "type": "string",
                    "description": "Collection Handle",
                    "example": "111184/figshare.1234"
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint",
                    "example": "https://api.figshare.com/v2/collections/123"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when collection was published ",
                    "example": "2015-08-12T00:39:55"
                }
            }
        },
        "Category": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "parent_id",
                "id",
                "title",
                "path",
                "source_id",
                "taxonomy_id"
            ],
            "properties": {
                "parent_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Parent category",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Category id",
                    "example": 11
                },
                "title": {
                    "type": "string",
                    "description": "Category title",
                    "example": "Anatomy"
                },
                "path": {
                    "type": "string",
                    "description": "Path to all ancestor ids",
                    "example": "/450/1024/6532"
                },
                "source_id": {
                    "type": "string",
                    "description": "ID in original standard taxonomy",
                    "example": "300204"
                },
                "taxonomy_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Internal id of taxonomy the category is part of",
                    "example": 4
                }
            }
        },
        "CategoryList": {
            "x-tag": "common",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Category"
                }
            ],
            "required": [
                "parent_id",
                "id",
                "title",
                "path",
                "source_id",
                "taxonomy_id",
                "is_selectable",
                "has_children"
            ],
            "properties": {
                "is_selectable": {
                    "type": "boolean",
                    "example": true,
                    "description": "The selectable status"
                },
                "has_children": {
                    "type": "boolean",
                    "example": false,
                    "description": "True if category has children"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Parent category",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Category id",
                    "example": 11
                },
                "title": {
                    "type": "string",
                    "description": "Category title",
                    "example": "Anatomy"
                },
                "path": {
                    "type": "string",
                    "description": "Path to all ancestor ids",
                    "example": "/450/1024/6532"
                },
                "source_id": {
                    "type": "string",
                    "description": "ID in original standard taxonomy",
                    "example": "300204"
                },
                "taxonomy_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Internal id of taxonomy the category is part of",
                    "example": 4
                }
            }
        },
        "License": {
            "x-tag": "institutions",
            "type": "object",
            "required": [
                "value",
                "name",
                "url"
            ],
            "properties": {
                "value": {
                    "type": "integer",
                    "format": "int64",
                    "description": "License value",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "description": "License name",
                    "example": "CC BY"
                },
                "url": {
                    "type": "string",
                    "format": "url",
                    "description": "License url",
                    "example": "http://creativecommons.org/licenses/by/4.0/"
                }
            }
        },
        "ArticleVersions": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "version",
                "url"
            ],
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Version number",
                    "example": 1
                },
                "url": {
                    "type": "string",
                    "format": "url",
                    "description": "Api endpoint for the item version",
                    "example": "https://api.figshare.com/v2/articles/2000005/versions/1"
                }
            }
        },
        "CollectionVersions": {
            "x-tag": "collections",
            "type": "object",
            "required": [
                "version",
                "url",
                "funding"
            ],
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Version number",
                    "example": 1
                },
                "url": {
                    "type": "string",
                    "format": "url",
                    "description": "Api endpoint for the collection version",
                    "example": "https://api.figshare.com/v2/collections/2000005/versions/1"
                },
                "funding": {
                    "type": "array",
                    "description": "Full Collection funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                }
            }
        },
        "ArticleEmbargo": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "is_embargoed",
                "embargo_date",
                "embargo_type",
                "embargo_title",
                "embargo_reason",
                "embargo_options"
            ],
            "properties": {
                "is_embargoed": {
                    "type": "boolean",
                    "example": true,
                    "description": "True if embargoed"
                },
                "embargo_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when embargo lifts",
                    "example": "2018-05-22T04:04:04"
                },
                "embargo_type": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Embargo type",
                    "example": "article"
                },
                "embargo_title": {
                    "type": "string",
                    "description": "Title for embargo",
                    "example": "File(s) under embargo"
                },
                "embargo_reason": {
                    "description": "Reason for embargo",
                    "type": "string",
                    "example": ""
                },
                "embargo_options": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of embargo permissions that are associated with the article. If the type is logged_in and the group_ids list is empty, then the whole institution can see the article; if there are multiple group_ids, then only users that are under those groups can see the article.",
                    "example": [
                        {
                            "id": 13,
                            "type": "ip_range",
                            "group_ids": [],
                            "ip_name": "bacau"
                        },
                        {
                            "id": 12,
                            "type": "logged_in",
                            "ip_name": "",
                            "group_ids": [
                                550,
                                9448
                            ]
                        }
                    ]
                }
            }
        },
        "ArticleEmbargoUpdater": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "is_embargoed",
                "embargo_type",
                "embargo_date"
            ],
            "properties": {
                "is_embargoed": {
                    "type": "boolean",
                    "description": "Embargo status",
                    "example": true
                },
                "embargo_date": {
                    "type": "string",
                    "description": "Date when the embargo expires and the article gets published, '0' value will set up permanent embargo",
                    "example": "2018-05-22T04:04:04"
                },
                "embargo_type": {
                    "type": "string",
                    "enum": [
                        "article",
                        "file"
                    ],
                    "description": "Embargo can be enabled at the article or the file level. Possible values: article, file",
                    "example": "file"
                },
                "embargo_title": {
                    "type": "string",
                    "description": "Title for embargo",
                    "example": "File(s) under embargo"
                },
                "embargo_reason": {
                    "type": "string",
                    "description": "Reason for setting embargo",
                    "example": ""
                },
                "embargo_options": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of embargo permissions to be associated with the article. The list must contain `id` and can also contain `group_ids`(a field that only applies to 'logged_in' permissions). The new list replaces old options in the database, and an empty list removes all permissions for this article. Administration permission has to be set up alone but logged in and IP range permissions can be set up together.",
                    "example": [
                        {
                            "id": 1321
                        },
                        {
                            "id": 3345
                        },
                        {
                            "id": 54621,
                            "group_ids": [
                                4332,
                                5433,
                                678
                            ]
                        }
                    ]
                }
            }
        },
        "ArticleConfidentiality": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "is_confidential",
                "reason"
            ],
            "properties": {
                "is_confidential": {
                    "type": "boolean",
                    "description": "True if article is confidential",
                    "example": true
                },
                "reason": {
                    "description": "Reason for confidentiality",
                    "type": "string",
                    "example": "need to"
                }
            }
        },
        "CustomArticleFieldAdd": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "description": "Custom  metadata name",
                    "type": "string",
                    "example": "key"
                },
                "value": {
                    "description": "Custom metadata value (can be either a string or an array of strings)",
                    "example": "value"
                }
            }
        },
        "CustomArticleField": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "name",
                "value",
                "field_type",
                "settings",
                "order",
                "is_mandatory"
            ],
            "properties": {
                "name": {
                    "description": "Custom  metadata name",
                    "type": "string",
                    "example": "key"
                },
                "value": {
                    "description": "Custom metadata value (can be either a string or an array of strings)",
                    "example": "value"
                },
                "field_type": {
                    "description": "Custom field type",
                    "type": "string",
                    "example": "textarea",
                    "enum": [
                        "text",
                        "textarea",
                        "dropdown",
                        "url",
                        "email",
                        "date",
                        "dropdown_large_list"
                    ]
                },
                "settings": {
                    "description": "Settings for the custom field",
                    "type": "object",
                    "example": {
                        "validations": {
                            "min_length": 1,
                            "max_length": 1000
                        },
                        "placeholder": "Enter your custom field here"
                    }
                },
                "order": {
                    "description": "Order of the custom field",
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "is_mandatory": {
                    "description": "Whether the field is mandatory or not",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "PublicFile": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "id",
                "name",
                "size",
                "is_link_only",
                "download_url",
                "supplied_md5",
                "computed_md5"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "File id",
                    "format": "int64",
                    "example": 3000002
                },
                "name": {
                    "type": "string",
                    "description": "File name",
                    "example": "test.xls"
                },
                "size": {
                    "type": "integer",
                    "description": "File size",
                    "format": "int64",
                    "example": 14848
                },
                "is_link_only": {
                    "description": "True if file is hosted somewhere else",
                    "type": "boolean",
                    "example": false
                },
                "download_url": {
                    "type": "string",
                    "description": "Url for file download",
                    "format": "url",
                    "example": "https://ndownloader.figshare.com/files/3000002"
                },
                "supplied_md5": {
                    "type": "string",
                    "description": "File supplied md5",
                    "example": "043a51806d646e88cafbf19e7b82846f"
                },
                "computed_md5": {
                    "type": "string",
                    "description": "File computed md5",
                    "example": "043a51806d646e88cafbf19e7b82846f"
                },
                "mimetype": {
                    "type": "string",
                    "description": "MIME Type of the file, it defaults to an empty string",
                    "example": "application/pdf"
                }
            }
        },
        "PrivateFile": {
            "x-tag": "common",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PublicFile"
                }
            ],
            "required": [
                "status",
                "viewer_type",
                "preview_state",
                "upload_url",
                "upload_token",
                "is_attached_to_public_version",
                "id",
                "name",
                "size",
                "is_link_only",
                "download_url",
                "supplied_md5",
                "computed_md5"
            ],
            "properties": {
                "status": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Status for file upload",
                    "example": "created"
                },
                "viewer_type": {
                    "description": "File viewer type",
                    "type": "string"
                },
                "preview_state": {
                    "description": "File preview state",
                    "type": "string",
                    "example": "preview not available"
                },
                "upload_url": {
                    "description": "Upload url for file",
                    "type": "string",
                    "format": "url",
                    "example": "https://uploads.figshare.com"
                },
                "upload_token": {
                    "type": "string",
                    "description": "Token for file upload",
                    "example": "9dfc5fe3-d617-4d93-ac11-8afe7e984a4b"
                },
                "is_attached_to_public_version": {
                    "type": "boolean",
                    "description": "True if the file is attached to a public item version",
                    "example": true
                },
                "id": {
                    "type": "integer",
                    "description": "File id",
                    "format": "int64",
                    "example": 3000002
                },
                "name": {
                    "type": "string",
                    "description": "File name",
                    "example": "test.xls"
                },
                "size": {
                    "type": "integer",
                    "description": "File size",
                    "format": "int64",
                    "example": 14848
                },
                "is_link_only": {
                    "description": "True if file is hosted somewhere else",
                    "type": "boolean",
                    "example": false
                },
                "download_url": {
                    "type": "string",
                    "description": "Url for file download",
                    "format": "url",
                    "example": "https://ndownloader.figshare.com/files/3000002"
                },
                "supplied_md5": {
                    "type": "string",
                    "description": "File supplied md5",
                    "example": "043a51806d646e88cafbf19e7b82846f"
                },
                "computed_md5": {
                    "type": "string",
                    "description": "File computed md5",
                    "example": "043a51806d646e88cafbf19e7b82846f"
                },
                "mimetype": {
                    "type": "string",
                    "description": "MIME Type of the file, it defaults to an empty string",
                    "example": "application/pdf"
                }
            }
        },
        "Author": {
            "x-tag": "authors",
            "type": "object",
            "required": [
                "id",
                "full_name",
                "first_name",
                "last_name",
                "is_active",
                "url_name",
                "orcid_id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Author id",
                    "example": 97657
                },
                "full_name": {
                    "type": "string",
                    "description": "Author full name",
                    "example": "John Doe"
                },
                "first_name": {
                    "type": "string",
                    "description": "Author first name",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "description": "Author last name",
                    "example": "Doe"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "True if author has published items",
                    "example": 1
                },
                "url_name": {
                    "type": "string",
                    "description": "Author url name",
                    "example": "John_Doe"
                },
                "orcid_id": {
                    "type": "string",
                    "description": "Author Orcid",
                    "example": "1234-5678-9123-1234"
                }
            }
        },
        "AuthorComplete": {
            "x-tag": "authors",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Author"
                }
            ],
            "required": [
                "institution_id",
                "group_id",
                "first_name",
                "last_name",
                "is_public",
                "job_title",
                "id",
                "full_name",
                "url_name",
                "orcid_id",
                "is_active"
            ],
            "properties": {
                "institution_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Institution id"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Group id"
                },
                "first_name": {
                    "type": "string",
                    "description": "Author first name",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "description": "Author last name",
                    "example": "Doe"
                },
                "is_public": {
                    "type": "integer",
                    "format": "int64",
                    "description": "if 1 then the author has published items"
                },
                "job_title": {
                    "type": "string",
                    "description": "Job title"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Author id",
                    "example": 97657
                },
                "full_name": {
                    "type": "string",
                    "description": "Author full name",
                    "example": "John Doe"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "True if author has published items",
                    "example": 1
                },
                "url_name": {
                    "type": "string",
                    "description": "Author url name",
                    "example": "John_Doe"
                },
                "orcid_id": {
                    "type": "string",
                    "description": "Author Orcid",
                    "example": "1234-5678-9123-1234"
                }
            }
        },
        "Account": {
            "x-tag": "other",
            "type": "object",
            "required": [
                "id",
                "first_name",
                "last_name",
                "used_quota_private",
                "modified_date",
                "used_quota",
                "created_date",
                "quota",
                "group_id",
                "institution_user_id",
                "institution_id",
                "email",
                "used_quota_public",
                "pending_quota_request",
                "active",
                "maximum_file_size",
                "user_id",
                "orcid_id",
                "symplectic_user_id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Account id",
                    "format": "int64",
                    "example": 1495682
                },
                "first_name": {
                    "type": "string",
                    "description": "First Name",
                    "example": "Doe"
                },
                "last_name": {
                    "type": "string",
                    "description": "Last Name",
                    "example": "John"
                },
                "used_quota_private": {
                    "type": "integer",
                    "description": "Account used private quota",
                    "format": "int64",
                    "example": 0
                },
                "modified_date": {
                    "type": "string",
                    "description": "Date of last account modification",
                    "example": "2018-05-22T04:04:04"
                },
                "used_quota": {
                    "type": "integer",
                    "description": "Account total used quota",
                    "format": "int64",
                    "example": 0
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when account was created",
                    "example": "2018-05-22T04:04:04"
                },
                "quota": {
                    "type": "integer",
                    "description": "Account quota",
                    "format": "int64",
                    "example": 0
                },
                "group_id": {
                    "type": "integer",
                    "description": "Account group id",
                    "format": "int64",
                    "example": 0
                },
                "institution_user_id": {
                    "type": "string",
                    "description": "Account institution user id",
                    "example": "djohn42"
                },
                "institution_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Account institution",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@domain.com"
                },
                "used_quota_public": {
                    "type": "integer",
                    "description": "Account public used quota",
                    "format": "int64",
                    "example": 0
                },
                "pending_quota_request": {
                    "type": "boolean",
                    "description": "True if a quota request is pending",
                    "example": true
                },
                "active": {
                    "type": "integer",
                    "description": "Account activity status",
                    "format": "int64",
                    "example": 0
                },
                "maximum_file_size": {
                    "type": "integer",
                    "description": "Maximum upload size for account",
                    "format": "int64",
                    "example": 0
                },
                "user_id": {
                    "type": "integer",
                    "description": "User id associated with account, useful for example for adding the account as an author to an item",
                    "format": "int64",
                    "example": 1000001
                },
                "orcid_id": {
                    "type": "string",
                    "description": "ORCID iD associated to account",
                    "example": "0000-0001-2345-6789"
                },
                "symplectic_user_id": {
                    "type": "string",
                    "description": "Symplectic ID associated to account",
                    "example": "djohn42"
                }
            }
        },
        "ShortAccount": {
            "x-tag": "other",
            "type": "object",
            "required": [
                "id",
                "first_name",
                "last_name",
                "institution_id",
                "email",
                "active",
                "institution_user_id",
                "quota",
                "used_quota",
                "user_id",
                "orcid_id",
                "symplectic_user_id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Account id",
                    "format": "int64",
                    "example": 1495682
                },
                "first_name": {
                    "type": "string",
                    "description": "First Name",
                    "example": "Doe"
                },
                "last_name": {
                    "type": "string",
                    "description": "Last Name",
                    "example": "John"
                },
                "institution_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Account institution",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@domain.com"
                },
                "active": {
                    "type": "integer",
                    "description": "Account activity status",
                    "format": "int64",
                    "example": 0
                },
                "institution_user_id": {
                    "type": "string",
                    "description": "Account institution user id",
                    "example": 1
                },
                "quota": {
                    "type": "integer",
                    "description": "Total storage available to account, in bytes",
                    "format": "int64",
                    "example": 1074000000
                },
                "used_quota": {
                    "type": "integer",
                    "description": "Storage used by the account, in bytes",
                    "format": "int64",
                    "example": 1074000000
                },
                "user_id": {
                    "type": "integer",
                    "description": "User id associated with account, useful for example for adding the account as an author to an item",
                    "format": "int64",
                    "example": 1000001
                },
                "orcid_id": {
                    "type": "string",
                    "description": "ORCID iD associated to account",
                    "example": "0000-0001-2345-6789"
                },
                "symplectic_user_id": {
                    "type": "string",
                    "description": "Symplectic ID associated to account",
                    "example": "djohn42"
                }
            }
        },
        "User": {
            "x-tag": "other",
            "type": "object",
            "required": [
                "id",
                "first_name",
                "last_name",
                "name",
                "is_active",
                "url_name",
                "is_public",
                "job_title",
                "orcid_id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "User id",
                    "format": "int64",
                    "example": 1495682
                },
                "first_name": {
                    "type": "string",
                    "description": "First Name",
                    "example": "Doe"
                },
                "last_name": {
                    "type": "string",
                    "description": "Last Name",
                    "example": "John"
                },
                "name": {
                    "type": "string",
                    "description": "Full Name",
                    "example": "John Doe"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Account activity status",
                    "example": true
                },
                "url_name": {
                    "type": "string",
                    "description": "Name that appears in website url",
                    "example": "John_Doe"
                },
                "is_public": {
                    "type": "boolean",
                    "description": "Account public status",
                    "example": true
                },
                "job_title": {
                    "type": "string",
                    "description": "User Job title",
                    "example": "programmer"
                },
                "orcid_id": {
                    "type": "string",
                    "description": "Orcid associated to this User",
                    "example": "1234-5678-9123-1234"
                }
            }
        },
        "ArticleDOI": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "doi"
            ],
            "properties": {
                "doi": {
                    "type": "string",
                    "description": "Reserved DOI",
                    "example": "10.5072/FK2.FIGSHARE.20345"
                }
            }
        },
        "ArticleHandle": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "handle"
            ],
            "properties": {
                "handle": {
                    "type": "string",
                    "description": "Reserved Handle",
                    "example": "11172/FK2.FIGSHARE.20345"
                }
            }
        },
        "CollectionDOI": {
            "x-tag": "collections",
            "type": "object",
            "required": [
                "doi"
            ],
            "properties": {
                "doi": {
                    "type": "string",
                    "description": "Reserved DOI",
                    "example": "10.5072/FK2.FIGSHARE.20345"
                }
            }
        },
        "CollectionHandle": {
            "x-tag": "collections",
            "type": "object",
            "required": [
                "handle"
            ],
            "properties": {
                "handle": {
                    "type": "string",
                    "description": "Reserved Handle",
                    "example": "11172/FK2.FIGSHARE.20345"
                }
            }
        },
        "AuthorsCreator": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "authors"
            ],
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. For adding more authors use the specific authors endpoint.",
                    "example": [
                        {
                            "id": 12121
                        },
                        {
                            "id": 34345
                        },
                        {
                            "name": "John Doe"
                        }
                    ]
                }
            }
        },
        "CategoriesCreator": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "categories"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "description": "List of category ids",
                    "items": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Id of category"
                    },
                    "example": [
                        1,
                        10,
                        11
                    ]
                }
            }
        },
        "ArticlesCreator": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "articles"
            ],
            "properties": {
                "articles": {
                    "type": "array",
                    "description": "List of article ids",
                    "items": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Id of article"
                    },
                    "example": [
                        2000003,
                        2000004
                    ]
                }
            }
        },
        "PrivateLinkCreator": {
            "x-tag": "articles",
            "type": "object",
            "properties": {
                "expires_date": {
                    "type": "string",
                    "description": "Date when this private link should expire - optional. By default private links expire in 365 days.",
                    "example": "2018-02-22 22:22:22"
                }
            }
        },
        "CollectionPrivateLinkCreator": {
            "x-tag": "collections",
            "type": "object",
            "properties": {
                "expires_date": {
                    "type": "string",
                    "description": "Date when this private link should expire - optional. By default private links expire in 365 days.",
                    "example": "2018-02-22 22:22:22"
                }
            }
        },
        "PrivateLink": {
            "x-tag": "articles",
            "type": "object",
            "required": [
                "id",
                "is_active",
                "expires_date",
                "html_location"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Private link id",
                    "example": "0cfb0dbeac92df445df4aba45f63fdc85fa0b9a888b64e157ce3c93b576aa300fb3621ef3a219515dd482"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "True if private link is active",
                    "example": true
                },
                "expires_date": {
                    "type": "string",
                    "description": "Date when link will expire",
                    "example": "2015-07-03T00:00:00"
                },
                "html_location": {
                    "description": "HTML url for private link",
                    "format": "url",
                    "type": "string",
                    "example": "https://figshare.com/s/d5ec7a85bcd6dbe9d9b2"
                }
            }
        },
        "FileCreator": {
            "x-tag": "articles",
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "description": "Url for an existing file that will not be uploaded to Figshare",
                    "example": "http://figshare.com/file.txt"
                },
                "md5": {
                    "type": "string",
                    "description": "MD5 sum pre-computed on client side.",
                    "example": "6c16e6e7d7587bd078e5117dda01d565"
                },
                "name": {
                    "type": "string",
                    "description": "File name including the extension; can be omitted only for linked files.",
                    "example": "test.py"
                },
                "size": {
                    "type": "integer",
                    "format": "int64",
                    "description": "File size in bytes; can be omitted only for linked files.",
                    "example": 70
                },
                "folder_path": {
                    "type": "string",
                    "description": "Unix-style directory path of the file; only available if the file was uploaded within a folder structure",
                    "example": "/level1/level2/level3"
                }
            }
        },
        "FileId": {
            "x-tag": "articles",
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "File ID",
                    "example": 123
                }
            }
        },
        "UploadInfo": {
            "x-tag": "upload",
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "token received after initializing a file upload",
                    "example": "693a2802-cd61-430d-b89f-507f0f6d8fd3"
                },
                "md5": {
                    "type": "string",
                    "description": "md5 provided on upload initialization",
                    "example": "3a7f451c068f4e13260034c611378140"
                },
                "size": {
                    "type": "integer",
                    "format": "int64",
                    "description": "size of file in bytes",
                    "example": 70
                },
                "name": {
                    "type": "string",
                    "description": "name of file on upload server",
                    "example": "3000017/test.py"
                },
                "status": {
                    "type": "string",
                    "description": "Upload status",
                    "enum": [
                        "PENDING",
                        "COMPLETED",
                        "ABORTED"
                    ]
                },
                "parts": {
                    "type": "array",
                    "description": "Uploads parts",
                    "items": {
                        "$ref": "#/definitions/UploadFilePart"
                    }
                }
            }
        },
        "UploadFilePart": {
            "x-tag": "upload",
            "type": "object",
            "properties": {
                "partNo": {
                    "type": "integer",
                    "format": "int64",
                    "description": "File part id",
                    "example": 1
                },
                "startOffset": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Indexes on byte range. zero-based and inclusive",
                    "example": 0
                },
                "endOffset": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Indexes on byte range. zero-based and inclusive",
                    "example": 69
                },
                "status": {
                    "type": "string",
                    "description": "part status",
                    "enum": [
                        "PENDING",
                        "COMPLETE"
                    ]
                },
                "locked": {
                    "type": "boolean",
                    "description": "When a part is being uploaded it is being locked, by setting the locked flag to true. No changes/uploads can happen on this part from other requests."
                }
            }
        },
        "Collection": {
            "x-tag": "collections",
            "type": "object",
            "required": [
                "id",
                "title",
                "doi",
                "handle",
                "url",
                "timeline",
                "published_date"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Collection id",
                    "example": 123
                },
                "title": {
                    "type": "string",
                    "description": "Collection title",
                    "example": "Sample collection"
                },
                "doi": {
                    "type": "string",
                    "description": "Collection DOI",
                    "example": "10.6084/m9.figshare.123"
                },
                "handle": {
                    "type": "string",
                    "description": "Collection Handle",
                    "example": "111184/figshare.1234"
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint",
                    "example": "https://api.figshare.com/v2/collections/123"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when collection was published ",
                    "example": "2015-08-12T00:39:55"
                }
            }
        },
        "CollectionComplete": {
            "x-tag": "collections",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Collection"
                }
            ],
            "required": [
                "funding",
                "resource_id",
                "resource_doi",
                "resource_title",
                "resource_link",
                "resource_version",
                "version",
                "description",
                "categories",
                "references",
                "related_materials",
                "tags",
                "keywords",
                "authors",
                "institution_id",
                "group_id",
                "articles_count",
                "public",
                "citation",
                "group_resource_id",
                "custom_fields",
                "modified_date",
                "created_date",
                "timeline",
                "id",
                "title",
                "doi",
                "handle",
                "url",
                "published_date"
            ],
            "properties": {
                "funding": {
                    "type": "array",
                    "description": "Full Collection funding information",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/FundingInformation"
                    }
                },
                "resource_id": {
                    "type": "string",
                    "description": "Collection resource id",
                    "example": ""
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Collection resource doi",
                    "example": "10.6084/m9.figshare.123"
                },
                "resource_title": {
                    "type": "string",
                    "description": "Collection resource title",
                    "example": "test"
                },
                "resource_link": {
                    "type": "string",
                    "description": "Collection resource link",
                    "example": "http://figshare.com"
                },
                "resource_version": {
                    "type": "integer",
                    "description": "Collection resource version",
                    "format": "int64",
                    "example": 0
                },
                "version": {
                    "type": "integer",
                    "description": "Collection version",
                    "format": "int64",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "description": "Collection description",
                    "example": "description"
                },
                "categories": {
                    "type": "array",
                    "description": "List of collection categories",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "references": {
                    "type": "array",
                    "description": "List of collection references",
                    "items": {
                        "type": "string",
                        "format": "url"
                    }
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "description": "List of collection tags. Keywords can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2"
                    ]
                },
                "keywords": {
                    "type": "array",
                    "description": "List of collection keywords. Tags can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t1",
                        "t2"
                    ]
                },
                "authors": {
                    "type": "array",
                    "description": "List of collection authors",
                    "items": {
                        "$ref": "#/definitions/Author"
                    }
                },
                "institution_id": {
                    "type": "integer",
                    "description": "Collection institution",
                    "format": "int64",
                    "example": 1
                },
                "group_id": {
                    "type": "integer",
                    "description": "Collection group",
                    "format": "int64",
                    "example": 1
                },
                "articles_count": {
                    "type": "integer",
                    "description": "Number of articles in collection",
                    "format": "int64",
                    "example": 1
                },
                "public": {
                    "type": "boolean",
                    "description": "True if collection is published",
                    "example": true
                },
                "citation": {
                    "type": "string",
                    "description": "Collection citation",
                    "example": "citation"
                },
                "group_resource_id": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Collection group resource id",
                    "example": 1
                },
                "custom_fields": {
                    "type": "array",
                    "description": "Collection custom fields",
                    "items": {
                        "$ref": "#/definitions/CustomArticleField"
                    }
                },
                "modified_date": {
                    "type": "string",
                    "description": "Date when collection was last modified",
                    "example": "2017-05-15T15:12:26Z"
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when collection was created",
                    "example": "2017-05-15T15:12:26Z"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/Timeline"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Collection id",
                    "example": 123
                },
                "title": {
                    "type": "string",
                    "description": "Collection title",
                    "example": "Sample collection"
                },
                "doi": {
                    "type": "string",
                    "description": "Collection DOI",
                    "example": "10.6084/m9.figshare.123"
                },
                "handle": {
                    "type": "string",
                    "description": "Collection Handle",
                    "example": "111184/figshare.1234"
                },
                "url": {
                    "type": "string",
                    "description": "Api endpoint",
                    "example": "https://api.figshare.com/v2/collections/123"
                },
                "published_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Date when collection was published ",
                    "example": "2015-08-12T00:39:55"
                }
            }
        },
        "CollectionCreate": {
            "x-tag": "collections",
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "funding": {
                    "type": "string",
                    "description": "Grant number or funding authority",
                    "default": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Funding creation / update items",
                    "items": {
                        "$ref": "#/definitions/FundingCreate"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Title of collection",
                    "maxLength": 1000,
                    "minLength": 3,
                    "example": "Test collection title"
                },
                "description": {
                    "type": "string",
                    "description": "The collection description. In a publisher case, usually this is the remote collection description",
                    "default": "",
                    "example": "Test description of article",
                    "maxLength": 20000
                },
                "articles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of articles to be associated with the collection",
                    "example": [
                        2000001,
                        2000005
                    ]
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of authors to be associated with the collection. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. For adding more authors use the specific authors endpoint.",
                    "default": [],
                    "example": [
                        {
                            "name": "John Doe"
                        },
                        {
                            "id": 20005
                        }
                    ]
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "List of category ids to be associated with the collection(e.g [1, 23, 33, 66])",
                    "default": [],
                    "example": [
                        1,
                        10,
                        11
                    ]
                },
                "categories_by_source_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of category source ids to be associated with the collection, supersedes the categories property",
                    "default": [],
                    "example": [
                        "300204",
                        "400207"
                    ]
                },
                "tags": {
                    "type": "array",
                    "description": "List of tags to be associated with the collection. Keywords can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "keywords": {
                    "type": "array",
                    "description": "List of tags to be associated with the collection. Tags can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "references": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "link"
                    },
                    "description": "List of links to be associated with the collection (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
                    "default": [],
                    "example": [
                        "http://figshare.com",
                        "http://api.figshare.com"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "custom_fields": {
                    "type": "object",
                    "description": "List of key, values pairs to be associated with the collection",
                    "example": {
                        "defined_key": "value for it"
                    }
                },
                "custom_fields_list": {
                    "type": "array",
                    "description": "List of custom fields values, supersedes custom_fields parameter",
                    "items": {
                        "$ref": "#/definitions/CustomArticleFieldAdd"
                    }
                },
                "doi": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "handle": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "resource_id": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article id"
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_link": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article link"
                },
                "resource_title": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                },
                "resource_version": {
                    "type": "integer",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article version"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/TimelineUpdate"
                }
            }
        },
        "CollectionUpdate": {
            "x-tag": "collections",
            "type": "object",
            "properties": {
                "funding": {
                    "type": "string",
                    "description": "Grant number or funding authority",
                    "default": ""
                },
                "funding_list": {
                    "type": "array",
                    "description": "Funding creation / update items",
                    "items": {
                        "$ref": "#/definitions/FundingCreate"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Title of collection",
                    "maxLength": 1000,
                    "minLength": 3,
                    "example": "Test collection title"
                },
                "description": {
                    "type": "string",
                    "description": "The collection description. In a publisher case, usually this is the remote collection description",
                    "default": "",
                    "example": "Test description of collection",
                    "maxLength": 20000
                },
                "articles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of articles to be associated with the collection",
                    "example": [
                        2000001,
                        2000005
                    ]
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of authors to be associated with the collection. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. For adding more authors use the specific authors endpoint.",
                    "default": [],
                    "example": [
                        {
                            "name": "John Doe"
                        },
                        {
                            "id": 20005
                        }
                    ]
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "List of category ids to be associated with the collection (e.g [1, 23, 33, 66])",
                    "default": [],
                    "example": [
                        1,
                        10,
                        11
                    ]
                },
                "categories_by_source_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of category source ids to be associated with the article, supersedes the categories property",
                    "default": [],
                    "example": [
                        "300204",
                        "400207"
                    ]
                },
                "tags": {
                    "type": "array",
                    "description": "List of tags to be associated with the collection. Keywords can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "keywords": {
                    "type": "array",
                    "description": "List of tags to be associated with the collection. Tags can be used instead",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "references": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "link"
                    },
                    "description": "List of links to be associated with the collection (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
                    "default": [],
                    "example": [
                        "http://figshare.com",
                        "http://api.figshare.com"
                    ]
                },
                "related_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedMaterial"
                    },
                    "default": [],
                    "description": "List of related materials; supersedes references and resource DOI/title.",
                    "example": [
                        {
                            "id": 10432,
                            "identifier": "10.6084/m9.figshare.1407024",
                            "identifier_type": "DOI",
                            "relation": "IsSupplementTo",
                            "title": "Figshare for institutions brochure",
                            "is_linkout": false
                        }
                    ]
                },
                "custom_fields": {
                    "type": "object",
                    "description": "List of key, values pairs to be associated with the collection",
                    "example": {
                        "defined_key": "value for it"
                    }
                },
                "custom_fields_list": {
                    "type": "array",
                    "description": "List of custom fields values, supersedes custom_fields parameter",
                    "items": {
                        "$ref": "#/definitions/CustomArticleFieldAdd"
                    }
                },
                "doi": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "handle": {
                    "type": "string",
                    "description": "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
                    "default": ""
                },
                "resource_id": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article id"
                },
                "resource_doi": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
                    "default": ""
                },
                "resource_link": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article link"
                },
                "resource_title": {
                    "type": "string",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article title.",
                    "default": ""
                },
                "resource_version": {
                    "type": "integer",
                    "description": "Not applicable to regular users. In a publisher case, this is the publisher article version"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups"
                },
                "timeline": {
                    "type": "object",
                    "description": "Various timeline dates",
                    "$ref": "#/definitions/TimelineUpdate"
                }
            }
        },
        "ConfidentialityCreator": {
            "type": "object",
            "required": [
                "reason"
            ],
            "properties": {
                "reason": {
                    "description": "Reason for confidentiality",
                    "type": "string"
                }
            }
        },
        "Location": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "location"
            ],
            "properties": {
                "location": {
                    "description": "Url for item",
                    "type": "string",
                    "format": "url"
                }
            }
        },
        "PrivateLinkResponse": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "location",
                "token",
                "html_location"
            ],
            "properties": {
                "location": {
                    "description": "Url for private link",
                    "format": "url",
                    "type": "string"
                },
                "html_location": {
                    "description": "HTML url for private link",
                    "format": "url",
                    "type": "string",
                    "example": "https://figshare.com/s/d5ec7a85bcd6dbe9d9b2"
                },
                "token": {
                    "description": "Token for private link",
                    "type": "string",
                    "example": "d5ec7a85bcd6dbe9d9b2"
                }
            }
        },
        "LocationWarnings": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "entity_id",
                "location",
                "warnings"
            ],
            "properties": {
                "entity_id": {
                    "description": "Figshare ID of the entity",
                    "type": "integer",
                    "format": "int64",
                    "example": 33334444
                },
                "location": {
                    "description": "Url for entity",
                    "type": "string",
                    "format": "url"
                },
                "warnings": {
                    "description": "Issues encountered during the operation",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CreateProjectResponse": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "entity_id",
                "location"
            ],
            "properties": {
                "entity_id": {
                    "description": "Figshare ID of the entity",
                    "type": "integer",
                    "format": "int64",
                    "example": 33334444
                },
                "location": {
                    "description": "Url for entity",
                    "type": "string",
                    "format": "url"
                }
            }
        },
        "LocationWarningsUpdate": {
            "x-tag": "common",
            "type": "object",
            "required": [
                "location",
                "warnings"
            ],
            "properties": {
                "location": {
                    "description": "Url for entity",
                    "type": "string",
                    "format": "url"
                },
                "warnings": {
                    "description": "Issues encountered during the operation",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "FundingInformation": {
            "x-tag": "funding",
            "type": "object",
            "required": [
                "id",
                "title",
                "grant_code",
                "funder_name",
                "is_user_defined",
                "url"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Funding id",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "description": "The funding name",
                    "example": "Scholarly funding"
                },
                "grant_code": {
                    "type": "string",
                    "description": "The grant code"
                },
                "funder_name": {
                    "type": "string",
                    "description": "Funder's name"
                },
                "is_user_defined": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Return 1 whether the grant has been introduced manually, 0 otherwise"
                },
                "url": {
                    "type": "string",
                    "format": "url",
                    "description": "The grant url",
                    "example": "https://app.dimensions.ai/details/grant/1"
                }
            }
        },
        "FundingSearch": {
            "x-tag": "funding",
            "type": "object",
            "properties": {
                "search_for": {
                    "type": "string",
                    "description": "Search term"
                }
            }
        },
        "FundingCreate": {
            "x-tag": "funding",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A funding ID as returned by the Funding Search endpoint"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the new user created funding"
                }
            }
        },
        "AccountReport": {
            "type": "object",
            "required": [
                "id",
                "account_id",
                "created_date",
                "status",
                "download_url",
                "group_id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A unique ID for the AccountRecord"
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the account which generated this report."
                },
                "created_date": {
                    "type": "string",
                    "description": "Date when the AccountReport was requested",
                    "example": "2017-05-15T15:12:26Z"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the report",
                    "enum": [
                        "missing",
                        "pending",
                        "done"
                    ]
                },
                "download_url": {
                    "type": "string",
                    "format": "url",
                    "description": "The download link for the generated XLSX",
                    "example": "https://some.com/storage/path/123/report-456.xlsx"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The group ID that was used to filter the report, if any."
                }
            }
        },
        "ItemType": {
            "type": "object",
            "required": [
                "id",
                "name",
                "string_id",
                "icon",
                "public_description",
                "is_selectable",
                "url_name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the item type.",
                    "minimum": 1
                },
                "name": {
                    "type": "string",
                    "example": "journal contribution",
                    "description": "The name of the item type"
                },
                "string_id": {
                    "type": "string",
                    "example": "journal_contribution",
                    "description": "The string identifier of the item type."
                },
                "icon": {
                    "type": "string",
                    "example": "paper",
                    "description": "The string identifying the icon of the item type."
                },
                "public_description": {
                    "type": "string",
                    "example": "This is the description of an item type",
                    "description": "The description of the item type."
                },
                "is_selectable": {
                    "type": "boolean",
                    "example": true,
                    "description": "The selectable status"
                },
                "url_name": {
                    "type": "string",
                    "example": "journal_contribution",
                    "description": "The URL name of the item type."
                }
            }
        },
        "RelatedMaterial": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the related material; can be used to add existing materials of the same account to items.",
                    "example": 10432
                },
                "identifier": {
                    "type": "string",
                    "description": "The related material identifier (e.g., DOI, Handle, ISBN). Mandatory if creating a new material.",
                    "example": "10.6084/m9.figshare.1407024"
                },
                "title": {
                    "type": "string",
                    "description": "The related material title",
                    "example": "Rooter: A Methodology for the Typical Unification of Access Points and Redundancy"
                },
                "relation": {
                    "type": "string",
                    "enum": [
                        "IsCitedBy",
                        "Cites",
                        "IsSupplementTo",
                        "IsSupplementedBy",
                        "IsContinuedBy",
                        "Continues",
                        "Describes",
                        "IsDescribedBy",
                        "HasMetadata",
                        "IsMetadataFor",
                        "HasVersion",
                        "IsVersionOf",
                        "IsNewVersionOf",
                        "IsPreviousVersionOf",
                        "IsPartOf",
                        "HasPart",
                        "IsPublishedIn",
                        "IsReferencedBy",
                        "References",
                        "IsDocumentedBy",
                        "Documents",
                        "IsCompiledBy",
                        "Compiles",
                        "IsVariantFormOf",
                        "IsOriginalFormOf",
                        "IsIdenticalTo",
                        "IsReviewedBy",
                        "Reviews",
                        "IsDerivedFrom",
                        "IsSourceOf",
                        "IsRequiredBy",
                        "Requires",
                        "IsObsoletedBy",
                        "Obsoletes"
                    ],
                    "description": "The relation between the item and the related material; defaults to 'References'. Mandatory if creating a new material.",
                    "example": "IsSupplementTo",
                    "default": "References"
                },
                "identifier_type": {
                    "type": "string",
                    "enum": [
                        "ARK",
                        "arXiv",
                        "bibcode",
                        "DOI",
                        "EAN13",
                        "EISSN",
                        "Handle",
                        "IGSN",
                        "ISBN",
                        "ISSN",
                        "ISTC",
                        "LISSN",
                        "LSID",
                        "PMID",
                        "PURL",
                        "UPC",
                        "URL",
                        "URN",
                        "w3id"
                    ],
                    "description": "The type of the identifier of the related material; defaults to 'URL'. Mandatory if creating a new material.",
                    "example": "DOI",
                    "default": "URL"
                },
                "is_linkout": {
                    "type": "boolean",
                    "description": "Flag for highlighting this related material in the call-out box",
                    "example": true
                },
                "link": {
                    "type": "string",
                    "description": "The full hyperlink for the identifier. Automatically generated by Figshare.",
                    "example": "https://doi.org/10.6084/m9.figshare.1407024",
                    "readOnly": true
                }
            }
        },
        "ProfileUpdateData": {
            "x-tag": "profiles",
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "First name",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "description": "Last Name",
                    "example": "Doe"
                },
                "orcid": {
                    "type": "string",
                    "description": "User ORCID",
                    "example": "0000-0001-YYYY-XXXX"
                },
                "job_title": {
                    "type": "string",
                    "description": "User job title",
                    "example": "Researcher at institution X"
                },
                "fields_of_interest": {
                    "type": "array",
                    "description": "User fields of interest (category ids)",
                    "example": [
                        1,
                        2
                    ],
                    "items": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Id of category"
                    }
                },
                "fields_of_interest_by_source_id": {
                    "type": "array",
                    "description": "User fields of interest (category source IDs), supersedes the fields_of_interest property",
                    "example": [
                        "3204",
                        "320401"
                    ],
                    "items": {
                        "type": "string",
                        "description": "Source ID of category"
                    }
                },
                "location": {
                    "type": "string",
                    "description": "User location",
                    "example": "London, UK"
                },
                "facebook": {
                    "type": "string",
                    "format": "url",
                    "description": "User facebook URL",
                    "example": "https://facebook.com/profile/1"
                },
                "x": {
                    "type": "string",
                    "format": "url",
                    "description": "User X (twitter) URL",
                    "example": "https://x.com/profile/1"
                },
                "linkedin": {
                    "type": "string",
                    "format": "url",
                    "description": "User linkedin URL",
                    "example": "https://linkedin.com/profile/2"
                },
                "bio": {
                    "type": "string",
                    "description": "User biographical information",
                    "example": "Biographical information"
                },
                "personal_profiles": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string",
                                "description": "Label for the personal profile link",
                                "example": "ResearchGate"
                            },
                            "url": {
                                "type": "string",
                                "format": "url",
                                "description": "URL for the personal profile link",
                                "example": "https://researchgate.net/profile/1"
                            }
                        }
                    },
                    "description": "Add up to 10 additional personal profile links",
                    "example": [
                        {
                            "label": "ResearchGate",
                            "url": "https://researchgate.net/profile/1"
                        },
                        {
                            "label": "",
                            "url": "https://academia.edu/profile/1"
                        }
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://figshare.com/account/applications/authorize",
            "tokenUrl": "https://api.figshare.com/v2/token",
            "scopes": {
                "all": "Grants all access"
            }
        }
    },
    "x-additional-descriptions": [
        {
            "title": "Upload files",
            "position": "bottom",
            "subsections": [
                {
                    "title": "Steps to upload file",
                    "content": "description_upload_steps"
                },
                {
                    "title": "Uploads API",
                    "content": "description_upload_api"
                },
                {
                    "title": "Parts API",
                    "content": "description_upload_parts_api"
                },
                {
                    "title": "Example Upload on figshare",
                    "content": "description_upload_example"
                },
                {
                    "title": "Output of Script",
                    "content": "description_upload_output"
                },
                {
                    "title": "Upload Bash Script",
                    "content": "description_upload_bash"
                },
                {
                    "title": "Upload S3 File to Figshare",
                    "content": "description_upload_from_s3"
                }
            ]
        },
        {
            "title": "Search",
            "position": "bottom",
            "subsections": [
                {
                    "title": "How to find data on figshare",
                    "content": "description_search_intro"
                },
                {
                    "title": "Search operators",
                    "content": "description_search_operators"
                },
                {
                    "title": "Searchable attributes",
                    "content": "description_search_attributes"
                },
                {
                    "title": "Quick search",
                    "content": "description_search_quick"
                },
                {
                    "title": "Advanced search",
                    "content": "description_search_advanced"
                },
                {
                    "title": "Combined field search",
                    "content": "description_search_combined"
                },
                {
                    "title": "Complex searches",
                    "content": "description_search_complex"
                }
            ]
        },
        {
            "title": "Stats",
            "position": "bottom",
            "subsections": [
                {
                    "title": "Stats service",
                    "subsections": [
                        {
                            "title": "Intro",
                            "content": "description_stats_service_intro"
                        },
                        {
                            "title": "Authentication",
                            "content": "description_stats_service_auth"
                        },
                        {
                            "title": "Errors",
                            "content": "description_stats_service_errors"
                        },
                        {
                            "title": "Endpoints",
                            "content": "description_stats_service_endpoints"
                        }
                    ]
                },
                {
                    "title": "Breakdown",
                    "subsections": [
                        {
                            "title": "Endpoints for retrieving a breakdown",
                            "content": "description_stats_breakdown_endpoints"
                        },
                        {
                            "title": "Authorization",
                            "content": "description_stats_breakdown_auth"
                        },
                        {
                            "title": "Endpoint format",
                            "content": "description_stats_breakdown_format"
                        },
                        {
                            "title": "Request parameters",
                            "content": "description_stats_breakdown_params"
                        },
                        {
                            "title": "Examples",
                            "content": "description_stats_breakdown_examples"
                        }
                    ]
                },
                {
                    "title": "Timeline",
                    "subsections": [
                        {
                            "title": "Endpoints for retrieving a timeline",
                            "content": "description_stats_timeline_endpoints"
                        },
                        {
                            "title": "Authorization",
                            "content": "description_stats_timeline_auth"
                        },
                        {
                            "title": "Endpoint format",
                            "content": "description_stats_timeline_format"
                        },
                        {
                            "title": "Request parameters",
                            "content": "description_stats_timeline_params"
                        },
                        {
                            "title": "Examples",
                            "content": "description_stats_timeline_examples"
                        }
                    ]
                },
                {
                    "title": "Tops",
                    "subsections": [
                        {
                            "title": "Endpoints for retrieving tops",
                            "content": "description_stats_tops_endpoints"
                        },
                        {
                            "title": "Authorization",
                            "content": "description_stats_tops_auth"
                        },
                        {
                            "title": "Endpoint format",
                            "content": "description_stats_tops_format"
                        },
                        {
                            "title": "Request parameters",
                            "content": "description_stats_tops_params"
                        },
                        {
                            "title": "Examples",
                            "content": "description_stats_tops_examples"
                        }
                    ]
                },
                {
                    "title": "Totals",
                    "subsections": [
                        {
                            "title": "Endpoints for retrieving totals",
                            "content": "description_stats_totals_endpoints"
                        },
                        {
                            "title": "Authorization",
                            "content": "description_stats_totals_auth"
                        },
                        {
                            "title": "Endpoint format",
                            "content": "description_stats_totals_format"
                        },
                        {
                            "title": "Examples",
                            "content": "description_stats_totals_examples"
                        }
                    ]
                },
                {
                    "title": "Count Articles",
                    "subsections": [
                        {
                            "title": "Endpoint for retrieving counts",
                            "content": "description_stats_count_endpoints"
                        },
                        {
                            "title": "Authorization",
                            "content": "description_stats_count_auth"
                        },
                        {
                            "title": "Endpoint format",
                            "content": "description_stats_count_format"
                        },
                        {
                            "title": "Example",
                            "content": "description_stats_count_examples"
                        }
                    ]
                }
            ]
        },
        {
            "title": "OAI PMH",
            "position": "bottom",
            "subsections": [
                {
                    "title": "OAI-PMH",
                    "content": "description_oai_pmh"
                },
                {
                    "title": "Base URL",
                    "content": "description_oai_baseurl"
                },
                {
                    "title": "Item equals Article",
                    "content": "description_oai_itemarticle"
                },
                {
                    "title": "Metadata formats",
                    "content": "description_oai_metadata"
                },
                {
                    "title": "Datestamps",
                    "content": "description_oai_datestamp"
                },
                {
                    "title": "Sets",
                    "content": "description_oai_sets"
                },
                {
                    "title": "Update schedule",
                    "content": "description_oai_update_schedule"
                },
                {
                    "title": "Pagination and Resumption Token Expiration",
                    "content": "description_oai_pagination"
                },
                {
                    "title": "Rate limit",
                    "content": "description_oai_ratelimit"
                },
                {
                    "title": "Future development",
                    "content": "description_oai_futuredev"
                },
                {
                    "title": "Some examples",
                    "content": "description_oai_someexamples"
                }
            ]
        },
        {
            "title": "HR Feed",
            "position": "bottom",
            "subsections": [
                {
                    "title": "HR Feed Private Endpoint",
                    "content": "description_hrfeed_endpoint"
                },
                {
                    "title": "HR Feed examples",
                    "subsections": [
                        {
                            "title": "Python",
                            "content": "description_hrfeed_examples_python"
                        },
                        {
                            "title": "Java",
                            "content": "description_hrfeed_examples_java"
                        },
                        {
                            "title": "C Sharp",
                            "content": "description_hrfeed_examples_csharp"
                        },
                        {
                            "title": "Curl",
                            "content": "description_hrfeed_examples_curl"
                        }
                    ]
                },
                {
                    "title": "Response",
                    "content": "description_hrfeed_response"
                },
                {
                    "title": "Errors",
                    "content": "description_hrfeed_errors"
                },
                {
                    "title": "Notes",
                    "content": "description_hrfeed_notes"
                }
            ]
        },
        {
            "title": "Custom Fields",
            "position": "bottom",
            "subsections": [
                {
                    "title": "Custom Fields Private Endpoints",
                    "content": "description_custom_fields_endpoint"
                },
                {
                    "title": "Custom Fields examples",
                    "subsections": [
                        {
                            "title": "Python",
                            "content": "description_custom_fields_examples_python"
                        },
                        {
                            "title": "Java",
                            "content": "description_custom_fields_examples_java"
                        },
                        {
                            "title": "C Sharp",
                            "content": "description_custom_fields_examples_csharp"
                        },
                        {
                            "title": "Curl",
                            "content": "description_custom_fields_examples_curl"
                        }
                    ]
                },
                {
                    "title": "Response",
                    "content": "description_custom_fields_response"
                },
                {
                    "title": "Errors",
                    "content": "description_custom_fields_errors"
                },
                {
                    "title": "Notes",
                    "content": "description_custom_fields_notes"
                }
            ]
        },
        {
            "title": "figshare Documentation",
            "position": "top",
            "subsections": [
                {
                    "title": "Introduction",
                    "content": "description_intro"
                },
                {
                    "title": "OAuth",
                    "subsections": [
                        {
                            "title": "Intro",
                            "content": "description_oauth_intro"
                        },
                        {
                            "title": "Quick guide",
                            "content": "description_oauth_quick"
                        },
                        {
                            "title": "Scope",
                            "content": "description_oauth_scope"
                        },
                        {
                            "title": "Grant Types",
                            "content": "description_oauth_grant"
                        }
                    ]
                },
                {
                    "title": "API description",
                    "subsections": [
                        {
                            "title": "Feature list",
                            "content": "description_api_features"
                        },
                        {
                            "title": "Sending parameters",
                            "content": "description_api_parameters"
                        },
                        {
                            "title": "Resource representations",
                            "content": "description_api_resourcerepresentation"
                        },
                        {
                            "title": "Authentication",
                            "content": "description_api_auth"
                        },
                        {
                            "title": "Errors",
                            "content": "description_api_errors"
                        },
                        {
                            "title": "Searching filtering and pagination",
                            "content": "description_api_search"
                        },
                        {
                            "title": "Rate limiting",
                            "content": "description_api_ratelimit"
                        },
                        {
                            "title": "Conditional requests",
                            "content": "description_api_requests"
                        },
                        {
                            "title": "CORS policy",
                            "content": "description_api_cors"
                        },
                        {
                            "title": "Impersonation",
                            "content": "description_api_impersonation"
                        }
                    ]
                }
            ]
        }
    ]
}